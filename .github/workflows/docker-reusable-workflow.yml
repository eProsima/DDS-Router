name: docker-reusable-workflow

on:
  workflow_call:
    inputs:

      fastcdr_branch:
        description: 'Branch or tag of Fast CDR repository (https://github.com/eProsima/Fast-CDR)'
        required: true
        default: 'master'
        type: string

      fastdds_branch:
        description: 'Branch or tag of Fast DDS repository (https://github.com/eProsima/Fast-DDS)'
        required: true
        default: 'master'
        type: string

      devutils_branch:
        description: 'Branch or tag of eProsima/dev-utils repository (https://github.com/eProsima/dev-utils)'
        required: true
        default: 'main'
        type: string

      ddspipe_branch:
        description: 'Branch or tag of DDS Pipe repository (https://github.com/eProsima/DDS-Pipe)'
        required: true
        default: 'main'
        type: string

      ddsrouter_branch:
        description: 'Branch or tag of DDS Router repository (https://github.com/eProsima/DDS-Router)'
        required: true
        default: 'main'
        type: string

      custom_version_build:
        description: >
          Version of Fast DDS build from eProsima-CI.
        required: true
        type: string

      dependencies_artifact_postfix:
        description: 'Postfix name to add to artifact name to download dependencies. This is use to download a specific artifact version from eProsima-CI.'
        required: true
        default: '_nightly'
        type: string

      ref:
        description: >
          The branch or tag name to checkout.
        required: true
        type: string
        default: 'main'

env:
  code_packages_names: 'ddsrouter_test'
  docs_packages_names: ''

jobs:
  docker-test:

    runs-on: ubuntu-22.04

    env:
      DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE: "ddsrouter:ci"
      DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE: "vulcanexus:ci"

    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src
          ref: ${{ inputs.ref }}

      # Build Vulcanexus Docker image
      - name: Build custom Vulcanexus Docker image
        run: |
          cd ./src/.github/docker/vulcanexus
          docker build \
            --no-cache \
            --build-arg docker_image_base=eprosima/vulcanexus:humble-core \
            -t ${{ env.DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE }} \
            -f Dockerfile .

      # Build DDS Router Docker image
      - name: Build DDS Router Docker image
        run: |
          cd ./src/.github/docker/ddsrouter
          docker build \
            --no-cache \
            --build-arg fastcdr_branch=${{ inputs.fastcdr_branch }} \
            --build-arg fastdds_branch=${{ inputs.fastdds_branch }} \
            --build-arg devutils_branch=${{ inputs.devutils_branch }} \
            --build-arg ddspipe_branch=${{ inputs.ddspipe_branch }} \
            --build-arg ddsrouter_branch=${{ inputs.ddsrouter_branch }} \
            -t ${{ env.DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE }} \
            -f Dockerfile .

      # Check Docker images exist
      - name: Check if Docker images exist
        run: |
          [ -n "$(docker images -q ${{ env.DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE }})" ] || echo "DDS Router Docker image does not exists"
          [ -n "$(docker images -q ${{ env.DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE }})" ] || echo "Vulcanexus image does not exists"

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ubuntu-22.04
          cmake_build_type: "Release"
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile docker tests
        uses: eProsima/eProsima-CI/multiplatform/colcon_build@v0
        with:
          workspace: ${{ github.workspace }}
          colcon_build_args: --packages-up-to ddsrouter_test
          cmake_args: -DBUILD_COMPOSE_TESTS=ON -DCMAKE_BUILD_TYPE=Release
          workspace_dependencies: install
          colcon_meta_file: src/.github/workflows/configurations/${{ runner.os }}/colcon.meta

      # Run ddsrouter_test compose tests
      - name: Run flaky tests
        continue-on-error: true
        run: |
          export DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE=${{ env.DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE }}
          export DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE=${{ env.DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE }}
          source install/setup.bash
          colcon test \
            --packages-select ddsrouter_test \
            --event-handlers console_direct+ \
            --return-code-on-test-failure \
            --ctest-args \
              --label-regex xfail \
              --timeout 120

      - name: Run tests
        run: |
          export DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE=${{ env.DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE }}
          export DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE=${{ env.DDSROUTER_COMPOSE_TEST_ROS2_DOCKER_IMAGE }}
          source install/setup.bash
          colcon test \
            --packages-select ddsrouter_test \
            --event-handlers console_direct+ \
            --return-code-on-test-failure \
            --ctest-args \
              --label-exclude xfail \
              --timeout 120
