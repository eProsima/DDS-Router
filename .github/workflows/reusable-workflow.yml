# Reusable workflow to run the following jobs:
#
#   - multiplatform-tests
#     - [ ubuntu-22.04 | ubuntu-24.04 | windows-2019 | windows-2022 ]
#     - [ Debug | Release ]
#     - execute tests in different versions of ubuntu with different build types
#
#   - asan
#     - ubuntu-22.04
#     - execute tests with ASAN flag
#
#   - tsan
#     - ubuntu-22.04
#     - execute tests with TSAN flag
#
#   - clang
#     - ubuntu-22.04
#     - execute clang-tidy check
#
#   - coverage
#     - ubuntu-22.04
#     - execute test with coverage flag and upload results
#
#   - flaky
#     - ubuntu-22.04
#     - execute flaky tests
#
#   - docs
#     - ubuntu-22.04
#     - execute docs compile and tests
#
#   - uncrustify
#     - ubuntu-22.04
#     - test uncrustify
#
#   - python-linter
#     - ubuntu-22.04
#     - test python linter
#

name: reusable-workflow

on:

  workflow_call:
    inputs:

      custom_version_build:
        description: >
          Version of Fast DDS build from eProsima-CI.
        required: true
        type: string

      dependencies_artifact_postfix:
        description: >
          Postfix name to add to artifact name to download dependencies.
          This is use to download a specific artifact version from eProsima-CI.
        required: true
        default: '_nightly'
        type: string

env:
  code_packages_names: 'ddsrouter_core ddsrouter_yaml ddsrouter_tool'
  docs_packages_names: 'ddsrouter_docs'

jobs:

#####################################################################
# TEST

  multiplatform-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        cmake_build_type:
          - Release
          - Debug
        os:
          - ubuntu-22.04
          - ubuntu-24.04
          - windows-2019
          - windows-2022

    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ${{ matrix.os }}
          cmake_build_type: ${{ matrix.cmake_build_type }}
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and run tests
        id: compile_and_test
        uses: eProsima/eProsima-CI/multiplatform/colcon_build_test@main
        with:
          packages_names: ${{ env.code_packages_names }}
          cmake_args: -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          workspace_dependencies: install
          ctest_args: --label-exclude "xfail"
          colcon_meta_file: src/.github/workflows/configurations/${{ runner.os }}/colcon.meta

      - name: Test Report
        uses: eProsima/eProsima-CI/external/test-reporter@main
        if: success() || failure()
        with:
          name: "Report: ${{ matrix.os }} | ${{ matrix.cmake_build_type }} "
          path: "${{ steps.compile_and_test.outputs.ctest_results_path }}*.xml"
          working-directory: 'src'
          path-replace-backslashes: 'true'
          list-tests: 'failed'

#####################################################################
# ASAN

  asan:
    runs-on: ubuntu-22.04
    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ubuntu-22.04
          cmake_build_type: Release
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and run tests
        id: compile_and_test
        uses: eProsima/eProsima-CI/multiplatform/asan_build_test@main
        with:
          packages_names: ${{ env.code_packages_names }}
          workspace_dependencies: install

      - name: Test Report
        uses: eProsima/eProsima-CI/external/test-reporter@main
        if: success() || failure()
        with:
          name: "Report: ASAN "
          path: "${{ steps.compile_and_test.outputs.ctest_results_path }}*.xml"
          working-directory: 'src'
          list-tests: 'failed'

#####################################################################
# TSAN

  tsan:
    runs-on: ubuntu-22.04
    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ubuntu-22.04
          cmake_build_type: Release
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and run tests
        id: compile_and_test
        uses: eProsima/eProsima-CI/multiplatform/tsan_build_test@main
        with:
          packages_names: ${{ env.code_packages_names }}
          workspace_dependencies: install

      - name: Test Report
        uses: eProsima/eProsima-CI/external/test-reporter@main
        if: success() || failure()
        with:
          name: "Report: TSAN "
          path: "${{ steps.compile_and_test.outputs.ctest_results_path }}*.xml"
          working-directory: 'src'
          list-tests: 'failed'

#####################################################################
# CLANG

  clang:
    runs-on: ubuntu-22.04
    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ubuntu-22.04
          cmake_build_type: Release
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and run tests
        uses: eProsima/eProsima-CI/multiplatform/clang_build_test@v0
        with:
          packages_names: ${{ env.code_packages_names }}
          workspace_dependencies: install


#####################################################################
# COVERAGE

  coverage:
    runs-on: ubuntu-22.04
    environment:
      name: codecov
    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ubuntu-22.04
          cmake_build_type: Release
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and run tests
        uses: eProsima/eProsima-CI/ubuntu/coverage_build_test_upload@main
        with:
          packages_names: ${{ env.code_packages_names }}
          workspace_dependencies: install
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          codecov_fix_file_path: src/codecov.yml


#####################################################################
# FLAKY

  flaky:
    runs-on: ubuntu-22.04
    steps:

      - name: Sync repository
        uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src

      - name: Download dependencies and install requirements
        uses: ./src/.github/actions/project_dependencies
        with:
          os: ubuntu-22.04
          cmake_build_type: Release
          custom_version_build: ${{ inputs.custom_version_build }}
          dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and run tests
        id: compile_and_test
        uses: eProsima/eProsima-CI/multiplatform/colcon_build_test@main
        with:
          packages_names: ${{ env.code_packages_names }}
          workspace_dependencies: install
          ctest_args: --label-regex "xfail"

      - name: Test Report
        uses: eProsima/eProsima-CI/external/test-reporter@main
        if: success() || failure()
        with:
          name: "Report: Flaky "
          path: "${{ steps.compile_and_test.outputs.ctest_results_path }}*.xml"
          working-directory: 'src'
          fail-on-empty: 'false'
          list-tests: 'failed'

#####################################################################
# DOCUMENTATION TEST

  docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Build and test documentation
        uses: eProsima/eProsima-CI/ubuntu/sphinx_docs@main
        with:
          checkout_path: "src/ddsrouter"
          path_to_requirements: "src/ddsrouter/docs/requirements.txt"
          docs_subpackage_name: ${{ env.docs_packages_names }}
          secret_token: ${{ secrets.GITHUB_TOKEN }}


#####################################################################
# UNCRUSTIFY

  uncrustify:
    runs-on: ubuntu-22.04
    steps:

      - name: Uncrustify
        uses: eProsima/eProsima-CI/ubuntu/uncrustify@v0


#####################################################################
# PYTHON LINTER

  python-linter:
    runs-on: ubuntu-22.04
    steps:

      - name: Python Linter
        uses: eProsima/eProsima-CI/ubuntu/python_linter@v0
