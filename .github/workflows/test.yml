name: test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:

  windows-build-test-release:
    runs-on: windows-latest
    env:
      CXXFLAGS: /MP
      OPENSSL64_ROOT: "C:/Program Files/OpenSSL-Win64"

    steps:
      - name: Sync eProsima/DDS-Router repository
        uses: actions/checkout@v2
        with:
          path: DDS-Router

      - name: Install OpenSSL
        uses: ./DDS-Router/.github/actions/install-openssl-windows

      - name: Install GTest
        uses: ./DDS-Router/.github/actions/install-gtest-windows

      - name: Install yaml-cpp
        uses: ./DDS-Router/.github/actions/install-yamlcpp-windows

      - name: Install foonatham memory
        uses: ./DDS-Router/.github/actions/install-foonathan-memory-windows
        with:
          cmake_build_type: "Release"

      - name: Install Fast CDR
        uses: ./DDS-Router/.github/actions/install-fastcdr-windows
        with:
          cmake_build_type: "Release"

      - name: Install Fast DDS
        uses: ./DDS-Router/.github/actions/install-fastdds-windows
        with:
          cmake_build_type: "Release"

      - name: Install DDS Router
        shell: pwsh
        run: >
          cmake -DCMAKE_PREFIX_PATH='C:\Program Files\gtest;C:\Program Files\yamlcpp' `
            -DCMAKE_CXX_FLAGS="/WX /EHsc" -DBUILD_APP_TESTS=ON -B build\ddsrouter -A x64 -T host=x64 DDS-Router;
          cmake --build build\ddsrouter --config Release --target install

      - name: Run tests
        shell: pwsh
        run: ctest -C Release --test-dir build\ddsrouter -V --timeout 60 --label-exclude xfail

  windows-build-test-debug:
    runs-on: windows-latest
    env:
      CXXFLAGS: /MP
      OPENSSL64_ROOT: "C:/Program Files/OpenSSL-Win64"

    steps:
      - name: Sync eProsima/DDS-Router repository
        uses: actions/checkout@v2
        with:
          path: DDS-Router

      - name: Install OpenSSL
        uses: ./DDS-Router/.github/actions/install-openssl-windows

      - name: Install GTest
        uses: ./DDS-Router/.github/actions/install-gtest-windows
        with:
          cmake_build_type: "Debug"

      - name: Install yaml-cpp
        uses: ./DDS-Router/.github/actions/install-yamlcpp-windows
        with:
          cmake_build_type: "Debug"

      - name: Install foonatham memory
        uses: ./DDS-Router/.github/actions/install-foonathan-memory-windows
        with:
          cmake_build_type: "Debug"

      - name: Install Fast CDR
        uses: ./DDS-Router/.github/actions/install-fastcdr-windows
        with:
          cmake_build_type: "Debug"

      - name: Install Fast DDS
        uses: ./DDS-Router/.github/actions/install-fastdds-windows
        with:
          cmake_build_type: "Debug"

      - name: Install DDS Router
        shell: pwsh
        run: >
          cmake -DCMAKE_PREFIX_PATH='C:\Program Files\gtest;C:\Program Files\yamlcpp' `
          -DCMAKE_CXX_FLAGS="/WX /EHsc" -DBUILD_APP_TESTS=ON -B build\ddsrouter -A x64 -T host=x64 DDS-Router;
          cmake --build build\ddsrouter --config Debug --target install

      - name: Run tests
        shell: pwsh
        run: ctest -C Debug --test-dir build\ddsrouter -V --timeout 60 --label-exclude xfail

  ubuntu-build-test:
    runs-on: ubuntu-latest
    environment:
      name: codecov

    steps:
      - name: Sync eProsima/DDS-Router repository
        uses: actions/checkout@v2
        with:
          path: src/DDS-Router

      - name: Install apt packages
        uses: ./src/DDS-Router/.github/actions/install-apt-packages

      - name: Install GTest
        uses: ./src/DDS-Router/.github/actions/install-gtest-linux

      - name: Install Python packages
        uses: ./src/DDS-Router/.github/actions/install-python-packages

      - name: Fetch Fast DDS repositories
        uses: ./src/DDS-Router/.github/actions/fetch-fastdds-repos

      - name: Update colcon mixin
        run: |
          colcon mixin add default \
            https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
          colcon mixin update default
        continue-on-error: true

      - name: Build workspace
        run: |
          cat src/DDS-Router/.github/workflows/test_colcon.meta
          colcon build \
            --event-handlers=console_direct+ \
            --metas src/DDS-Router/.github/workflows/test_colcon.meta \
            --mixin coverage-gcc asan-gcc

      - name: Run tests
        run: |
          source install/setup.bash && \
          colcon test \
            --packages-select ddsrouter \
            --event-handlers=console_direct+ \
            --return-code-on-test-failure \
            --ctest-args \
              --label-exclude xfail \
              --timeout 60

      - name: Generate coverage report
        run: |
          cp src/DDS-Router/codecov.yml .
          mkdir coverage-report
          gcovr \
          --root src/DDS-Router/ \
          --object-directory build/ddsrouter \
          --output coverage-report/coverage.xml \
          --xml-pretty \
          --exclude='.*docs/.*' \
          --exclude='.*test/.*' \
          --exclude='.*github/.*' \
          --exclude='.*thirdparty/.*' \
          --exclude='.*resources/.*' \
          --exclude-unreachable-branches

      - name: Upload coverage
        uses: actions/upload-artifact@v1
        with:
          name: coverage-report
          path: coverage-report/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage-report/coverage.xml
          root_dir: src/DDS-Router
          fail_ci_if_error: true

      - name: Upload documentation
        uses: actions/upload-artifact@v1
        with:
          name: Documentation HTML
          path: install/ddsrouter/docs/ddsrouter_docs/sphinx/html/

      - name: Upload spelling errors
        uses: actions/upload-artifact@v1
        with:
          name: spelling_errors.txt
          path: build/ddsrouter/docs/test/spelling/output.txt
        continue-on-error: true

      - name: Upload Logs
        uses: actions/upload-artifact@v1
        with:
          name: colcon-logs-ubuntu
          path: log/
        if: always()

  ubuntu-build-test-flaky:
    runs-on: ubuntu-latest
    environment:
      name: codecov

    steps:
      - name: Sync eProsima/DDS-Router repository
        uses: actions/checkout@v2
        with:
          path: src/DDS-Router

      - name: Install apt packages
        uses: ./src/DDS-Router/.github/actions/install-apt-packages

      - name: Install GTest
        uses: ./src/DDS-Router/.github/actions/install-gtest-linux

      - name: Install Python packages
        uses: ./src/DDS-Router/.github/actions/install-python-packages

      - name: Fetch Fast DDS repositories
        uses: ./src/DDS-Router/.github/actions/fetch-fastdds-repos

      - name: Update colcon mixin
        run: |
          colcon mixin add default \
            https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
          colcon mixin update default
        continue-on-error: true

      - name: Build workspace
        run: |
          cat src/DDS-Router/.github/workflows/test_colcon.meta
          colcon build \
            --event-handlers=console_direct+ \
            --metas src/DDS-Router/.github/workflows/test_colcon.meta \
            --mixin coverage-gcc asan-gcc

      - name: Run tests
        run: |
          source install/setup.bash && \
          colcon test \
            --packages-select ddsrouter \
            --event-handlers=console_direct+ \
            --return-code-on-test-failure \
            --ctest-args \
              --label-regex xfail \
              --timeout 60

  clang-tidy:
    runs-on: ubuntu-latest
    steps:
      - name: Sync eProsima/DDS-Router repository
        uses: actions/checkout@v2
        with:
          path: src/DDS-Router

      - name: Install apt packages
        uses: ./src/DDS-Router/.github/actions/install-apt-packages

      - name: Install GTest
        uses: ./src/DDS-Router/.github/actions/install-gtest-linux

      - name: Install Python packages
        uses: ./src/DDS-Router/.github/actions/install-python-packages

      - name: Fetch Fast DDS repositories
        uses: ./src/DDS-Router/.github/actions/fetch-fastdds-repos

      - name: Build workspace
        run: |
          cat src/DDS-Router/.github/workflows/clang_colcon.meta
          colcon build \
            --event-handlers=console_direct+ \
            --metas src/DDS-Router/.github/workflows/clang_colcon.meta

      - name: Run clang-tidy
        run: |
          cd build/ddsrouter
          run-clang-tidy -header-filter='.*' -checks='clang-analyzer-cplusplus' -quiet 2> ${{ github.workspace }}/clang_results.yml

      - name: Upload clang results
        uses: actions/upload-artifact@v1
        with:
          name: clang_results
          path: ${{ github.workspace }}/clang_results.yml

  uncrustify:
    runs-on: ubuntu-latest
    steps:
      - name: Sync eProsima/DDS-Router repository
        uses: actions/checkout@v2
        with:
          path: src/DDS-Router

      - name: Fetch all branches and tags
        run: |
          cd src/DDS-Router
          git fetch --prune --unshallow

      - name: Install apt packages
        uses: ./src/DDS-Router/.github/actions/install-apt-packages

      - name: Install Python packages
        uses: ./src/DDS-Router/.github/actions/install-python-packages

      - name: Install uncrustify
        run: |
          git clone https://github.com/uncrustify/uncrustify.git \
            --branch uncrustify-0.71.0 \
            --single-branch uncrustify
          mkdir -p uncrustify/build
          cd uncrustify/build
          cmake ..
          sudo cmake --build . --target install
          cd ../..
          sudo rm -rf uncrustify

      # (TODO) Change to main branch when PR is merged
      - name: Clone ament_lint
        run: |
          git clone --branch feature/fix-language-set https://github.com/jparisu/ament_lint.git src/ament_lint

      - name: Build ament_uncrustify
        run: colcon build --packages-up-to ament_uncrustify

      - name: Fetch uncrustify config file
        run: |
          curl \
            -l https://raw.githubusercontent.com/eProsima/cpp-style/master/uncrustify.cfg \
            -o uncrustify.cfg

      - name: Get difference
        run: |
          cd src/DDS-Router
          echo "MODIFIED_FILES=$(git diff --name-only origin/${GITHUB_BASE_REF} origin/${GITHUB_HEAD_REF} | grep -e '\.h' -e '\.hpp' -e '\.cpp' -e '\.ipp' | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Check difference
        run: |
          cd src/DDS-Router
          if [[ -z "${MODIFIED_FILES}" ]]
          then
            touch empty.hpp
            echo "MODIFIED_FILES=empty.hpp" >> $GITHUB_ENV
          fi

      - name: Check style
        run: |
          source install/local_setup.bash
          cd src/DDS-Router
          ament_uncrustify \
            -c ../../uncrustify.cfg \
            --language CPP \
            --xunit-file ../../uncrustify_results.xml \
            ${MODIFIED_FILES}

      - name: Upload uncrustify results
        uses: actions/upload-artifact@v1
        with:
          name: uncrustify_results
          path: uncrustify_results.xml
