diff --git a/.common/cmake/test/cmake_test_utils.cmake b/.common/cmake/test/cmake_test_utils.cmake
index 3821df1..193a9f8 100644
--- a/.common/cmake/test/cmake_test_utils.cmake
+++ b/.common/cmake/test/cmake_test_utils.cmake
@@ -129,7 +129,7 @@ function(add_test_executable TEST_EXECUTABLE_NAME TEST_SOURCES TEST_NAME TEST_LI
     )

     if(MSVC)
-        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0)
+        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0 ${SUBMODULE_PROJECT_MACROS}_SOURCE)
     endif(MSVC)

     target_include_directories(${TEST_EXECUTABLE_NAME} PRIVATE
diff --git a/.common/include/library/eProsima_auto_link.h.in b/.common/include/library/eProsima_auto_link.h.in
index f3575fb..c709384 100644
--- a/.common/include/library/eProsima_auto_link.h.in
+++ b/.common/include/library/eProsima_auto_link.h.in
@@ -14,7 +14,7 @@

 /*
    Expected defines.
-   - EPROSIMA_LIB_NAME
+   - EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MINOR
  */
@@ -42,16 +42,16 @@
     #endif // if (defined(_DLL) || defined(_RTLDLL)) && defined(EPROSIMA_DYN_LINK)

 // Include library
-    #if defined(EPROSIMA_LIB_NAME) \
+    #if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) \
     && defined(EPROSIMA_LIB_PREFIX) \
     && defined(EPROSIMA_LIB_DEBUG_TAG) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
         #pragma \
-    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
+    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
     #else
     #error "Some required macros where not defined"
-    #endif // if defined(EPROSIMA_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
+    #endif // if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)

 #endif // _MSC_VER

@@ -60,9 +60,9 @@
 #undef EPROSIMA_LIB_PREFIX
 #endif // ifdef EPROSIMA_LIB_PREFIX

-#ifdef EPROSIMA_LIB_NAME
-#undef EPROSIMA_LIB_NAME
-#endif // ifdef EPROSIMA_LIB_NAME
+#ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#undef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#endif // ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME

 #ifdef EPROSIMA_LIB_DEBUG_TAG
 #undef EPROSIMA_LIB_DEBUG_TAG
diff --git a/.common/include/library/library_dll.h.in b/.common/include/library/library_dll.h.in
index ff78a44..304ee3e 100644
--- a/.common/include/library/library_dll.h.in
+++ b/.common/include/library/library_dll.h.in
@@ -64,7 +64,7 @@
     && !defined(@SUBMODULE_PROJECT_MACROS@_NO_LIB)

 // Set properties.
-#define EPROSIMA_LIB_NAME @SUBMODULE_PROJECT_NAME@
+#define EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME @SUBMODULE_PROJECT_NAME@

 #if defined(EPROSIMA_ALL_DYN_LINK) || defined(@SUBMODULE_PROJECT_MACROS@_DYN_LINK)
 #define EPROSIMA_DYN_LINK
diff --git a/ddsrouter_core/cmake/test/cmake_test_utils.cmake b/ddsrouter_core/cmake/test/cmake_test_utils.cmake
index 3821df1..193a9f8 100644
--- a/ddsrouter_core/cmake/test/cmake_test_utils.cmake
+++ b/ddsrouter_core/cmake/test/cmake_test_utils.cmake
@@ -129,7 +129,7 @@ function(add_test_executable TEST_EXECUTABLE_NAME TEST_SOURCES TEST_NAME TEST_LI
     )

     if(MSVC)
-        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0)
+        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0 ${SUBMODULE_PROJECT_MACROS}_SOURCE)
     endif(MSVC)

     target_include_directories(${TEST_EXECUTABLE_NAME} PRIVATE
diff --git a/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterConfiguration.hpp b/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterConfiguration.hpp
index 7c46df5..42fc06a 100644
--- a/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterConfiguration.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterConfiguration.hpp
@@ -22,11 +22,13 @@
 #include <memory>
 #include <set>

+#include <ddsrouter_utils/Formatter.hpp>
+
 #include <ddsrouter_core/configuration/DDSRouterReloadConfiguration.hpp>
 #include <ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp>
+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/topic/FilterTopic.hpp>
 #include <ddsrouter_core/types/topic/RealTopic.hpp>
-#include <ddsrouter_utils/Formatter.hpp>

 namespace eprosima {
 namespace ddsrouter {
@@ -44,7 +46,7 @@ public:
     /**
      * TODO
      */
-    DDSRouterConfiguration(
+    DDSROUTER_CORE_DllAPI DDSRouterConfiguration(
             std::set<std::shared_ptr<types::FilterTopic>> allowlist,
             std::set<std::shared_ptr<types::FilterTopic>> blocklist,
             std::set<std::shared_ptr<types::RealTopic>> builtin_topics,
@@ -57,12 +59,12 @@ public:
      *
      * @return Set of \c ParticipantConfigurations
      */
-    std::set<std::shared_ptr<ParticipantConfiguration>> participants_configurations() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<std::shared_ptr<ParticipantConfiguration>> participants_configurations() const noexcept;

-    bool is_valid(
+    DDSROUTER_CORE_DllAPI bool is_valid(
             utils::Formatter& error_msg) const noexcept override;

-    void reload(
+    DDSROUTER_CORE_DllAPI void reload(
             const DDSRouterReloadConfiguration& new_configuration);

 protected:
diff --git a/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterReloadConfiguration.hpp b/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterReloadConfiguration.hpp
index d0cb021..fa29005 100644
--- a/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterReloadConfiguration.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/configuration/DDSRouterReloadConfiguration.hpp
@@ -22,11 +22,13 @@
 #include <memory>
 #include <set>

+#include <ddsrouter_utils/Formatter.hpp>
+
 #include <ddsrouter_core/configuration/BaseConfiguration.hpp>
 #include <ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp>
+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/topic/FilterTopic.hpp>
 #include <ddsrouter_core/types/topic/RealTopic.hpp>
-#include <ddsrouter_utils/Formatter.hpp>

 namespace eprosima {
 namespace ddsrouter {
@@ -44,7 +46,7 @@ public:
     /**
      * TODO
      */
-    DDSRouterReloadConfiguration(
+    DDSROUTER_CORE_DllAPI DDSRouterReloadConfiguration(
             std::set<std::shared_ptr<types::FilterTopic>> allowlist,
             std::set<std::shared_ptr<types::FilterTopic>> blocklist,
             std::set<std::shared_ptr<types::RealTopic>> builtin_topics);
@@ -54,21 +56,21 @@ public:
      *
      * @return Set of filters to get allowed topics
      */
-    std::set<std::shared_ptr<types::FilterTopic>> allowlist() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<std::shared_ptr<types::FilterTopic>> allowlist() const noexcept;

     /**
      * @brief Return a set with the topics blocked in the configuration
      *
      * @return Set of filters to get blocked topics
      */
-    std::set<std::shared_ptr<types::FilterTopic>> blocklist() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<std::shared_ptr<types::FilterTopic>> blocklist() const noexcept;

     /**
      * TODO
      */
-    std::set<std::shared_ptr<types::RealTopic>> builtin_topics() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<std::shared_ptr<types::RealTopic>> builtin_topics() const noexcept;

-    bool is_valid(
+    DDSROUTER_CORE_DllAPI bool is_valid(
             utils::Formatter& error_msg) const noexcept override;

 protected:
diff --git a/ddsrouter_core/include/ddsrouter_core/configuration/participant/DiscoveryServerParticipantConfiguration.hpp b/ddsrouter_core/include/ddsrouter_core/configuration/participant/DiscoveryServerParticipantConfiguration.hpp
index 82eff31..529d296 100644
--- a/ddsrouter_core/include/ddsrouter_core/configuration/participant/DiscoveryServerParticipantConfiguration.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/configuration/participant/DiscoveryServerParticipantConfiguration.hpp
@@ -20,6 +20,7 @@
 #define _DDSROUTERCORE_CONFIGURATION_PARTICIPANT_DISCOVERYSERVERPARTICIPANTCONFIGURATION_HPP_

 #include <ddsrouter_core/configuration/participant/SimpleParticipantConfiguration.hpp>
+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/security/tls/TlsConfiguration.hpp>
 #include <ddsrouter_core/types/address/Address.hpp>
 #include <ddsrouter_core/types/address/DiscoveryServerConnectionAddress.hpp>
@@ -40,7 +41,7 @@ class DiscoveryServerParticipantConfiguration : public SimpleParticipantConfigur
 public:

     // TODO
-    DiscoveryServerParticipantConfiguration(
+    DDSROUTER_CORE_DllAPI DiscoveryServerParticipantConfiguration(
             const types::ParticipantId& id,
             const types::GuidPrefix& discovery_server_guid_prefix,
             const std::set<types::Address>& listening_addresses,
@@ -51,7 +52,7 @@ public:
             const types::DomainId& domain_id = DEFAULT_DS_DOMAIN_ID_);

     // TODO
-    DiscoveryServerParticipantConfiguration(
+    DDSROUTER_CORE_DllAPI DiscoveryServerParticipantConfiguration(
             const types::ParticipantId& id,
             const types::GuidPrefix& discovery_server_guid_prefix,
             const std::set<types::Address>& listening_addresses,
@@ -61,23 +62,23 @@ public:
             std::shared_ptr<types::security::TlsConfiguration> tls_configuration =
             std::make_shared<types::security::TlsConfiguration>());

-    types::GuidPrefix discovery_server_guid_prefix() const noexcept;
+    DDSROUTER_CORE_DllAPI types::GuidPrefix discovery_server_guid_prefix() const noexcept;

-    std::set<types::Address> listening_addresses() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<types::Address> listening_addresses() const noexcept;

-    std::set<types::DiscoveryServerConnectionAddress> connection_addresses() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<types::DiscoveryServerConnectionAddress> connection_addresses() const noexcept;

-    bool tls_active() const noexcept;
+    DDSROUTER_CORE_DllAPI bool tls_active() const noexcept;

-    std::shared_ptr<types::security::TlsConfiguration> tls_configuration() const;
+    DDSROUTER_CORE_DllAPI std::shared_ptr<types::security::TlsConfiguration> tls_configuration() const;

-    virtual bool is_valid(
+    DDSROUTER_CORE_DllAPI virtual bool is_valid(
             utils::Formatter& error_msg) const noexcept override;

-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const DiscoveryServerParticipantConfiguration& other) const noexcept;

-    static types::DomainId default_domain_id() noexcept;
+    DDSROUTER_CORE_DllAPI static types::DomainId default_domain_id() noexcept;

 protected:

@@ -86,7 +87,7 @@ protected:
     std::set<types::DiscoveryServerConnectionAddress> connection_addresses_;
     std::shared_ptr<types::security::TlsConfiguration> tls_configuration_;

-    static const types::DomainId DEFAULT_DS_DOMAIN_ID_; // 66
+    DDSROUTER_CORE_DllAPI static const types::DomainId DEFAULT_DS_DOMAIN_ID_; // 66
 };

 } /* namespace configuration */
diff --git a/ddsrouter_core/include/ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp b/ddsrouter_core/include/ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp
index 9ff9e84..f0a8790 100644
--- a/ddsrouter_core/include/ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp
@@ -20,6 +20,7 @@
 #define _DDSROUTERCORE_CONFIGURATION_PARTICIPANT_PARTICIPANTCONFIGURATION_HPP_

 #include <ddsrouter_core/configuration/BaseConfiguration.hpp>
+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/participant/ParticipantId.hpp>
 #include <ddsrouter_core/types/participant/ParticipantKind.hpp>

@@ -38,15 +39,15 @@ public:
     /**
      * TODO
      */
-    ParticipantConfiguration(
+    DDSROUTER_CORE_DllAPI ParticipantConfiguration(
             const types::ParticipantId& id,
             const types::ParticipantKind& kind) noexcept;

     //! Participant Kind associated with this configuration
-    types::ParticipantKind kind() const noexcept;
+    DDSROUTER_CORE_DllAPI types::ParticipantKind kind() const noexcept;

     //! Participant Id associated with this configuration
-    types::ParticipantId id() const noexcept;
+    DDSROUTER_CORE_DllAPI types::ParticipantId id() const noexcept;

     /**
      * @brief Equal comparator
@@ -58,10 +59,10 @@ public:
      * @param [in] other: ParticipantConfiguration to compare.
      * @return True if both configurations are the same, False otherwise.
      */
-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const ParticipantConfiguration& other) const noexcept;

-    virtual bool is_valid(
+    DDSROUTER_CORE_DllAPI virtual bool is_valid(
             utils::Formatter& error_msg) const noexcept override;

 protected:
diff --git a/ddsrouter_core/include/ddsrouter_core/configuration/participant/SimpleParticipantConfiguration.hpp b/ddsrouter_core/include/ddsrouter_core/configuration/participant/SimpleParticipantConfiguration.hpp
index 8f876d8..8e578bc 100644
--- a/ddsrouter_core/include/ddsrouter_core/configuration/participant/SimpleParticipantConfiguration.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/configuration/participant/SimpleParticipantConfiguration.hpp
@@ -20,6 +20,7 @@
 #define _DDSROUTERCORE_CONFIGURATION_PARTICIPANT_SIMPLEPARTICIPANTCONFIGURATION_HPP_

 #include <ddsrouter_core/configuration/participant/ParticipantConfiguration.hpp>
+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/dds/DomainId.hpp>

 namespace eprosima {
@@ -35,7 +36,7 @@ class SimpleParticipantConfiguration : public ParticipantConfiguration
 public:

     //! TODO
-    SimpleParticipantConfiguration(
+    DDSROUTER_CORE_DllAPI SimpleParticipantConfiguration(
             const types::ParticipantId& id,
             const types::ParticipantKind& kind = types::ParticipantKind::SIMPLE_RTPS,
             const types::DomainId& domain_id = DEFAULT_DOMAIN_ID_) noexcept;
@@ -47,12 +48,12 @@ public:
      *
      * @return DomainId
      */
-    types::DomainId domain() const noexcept;
+    DDSROUTER_CORE_DllAPI types::DomainId domain() const noexcept;

-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const SimpleParticipantConfiguration& other) const noexcept;

-    virtual bool is_valid(
+    DDSROUTER_CORE_DllAPI virtual bool is_valid(
             utils::Formatter& error_msg) const noexcept override;

 protected:
diff --git a/ddsrouter_core/include/ddsrouter_core/core/DDSRouter.hpp b/ddsrouter_core/include/ddsrouter_core/core/DDSRouter.hpp
index dbde5d8..ad6117e 100644
--- a/ddsrouter_core/include/ddsrouter_core/core/DDSRouter.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/core/DDSRouter.hpp
@@ -21,9 +21,12 @@

 #include <memory>

+#include <ddsrouter_utils/ReturnCode.hpp>
+
 #include <ddsrouter_core/configuration/DDSRouterConfiguration.hpp>
 #include <ddsrouter_core/configuration/DDSRouterReloadConfiguration.hpp>
-#include <ddsrouter_utils/ReturnCode.hpp>
+#include <ddsrouter_core/library/library_dll.h>
+

 namespace eprosima {
 namespace ddsrouter {
@@ -51,7 +54,7 @@ public:
      * @throw \c ConfigurationException in case the yaml inside allowedlist is not well-formed
      * @throw \c InitializationException in case \c IParticipants , \c IWriters or \c IReaders creation fails.
      */
-    DDSRouter(
+    DDSROUTER_CORE_DllAPI DDSRouter(
             const configuration::DDSRouterConfiguration& configuration);

     /**
@@ -61,7 +64,7 @@ public:
      * Destroy all Bridges
      * Destroy all Participants
      */
-    virtual ~DDSRouter();
+    DDSROUTER_CORE_DllAPI virtual ~DDSRouter();

     // EVENTS
     /**
@@ -75,7 +78,7 @@ public:
      *
      * @throw \c ConfigurationException in case the new yaml is not well-formed
      */
-    utils::ReturnCode reload_configuration(
+    DDSROUTER_CORE_DllAPI utils::ReturnCode reload_configuration(
             const configuration::DDSRouterReloadConfiguration& configuration);

     /**
@@ -87,7 +90,7 @@ public:
      *
      * @return \c RETCODE_OK always
      */
-    utils::ReturnCode start() noexcept;
+    DDSROUTER_CORE_DllAPI utils::ReturnCode start() noexcept;

     /**
      * @brief Stop communication in DDS Router
@@ -98,7 +101,7 @@ public:
      *
      * @return \c RETCODE_OK always
      */
-    utils::ReturnCode stop() noexcept;
+    DDSROUTER_CORE_DllAPI utils::ReturnCode stop() noexcept;

 protected:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/address/Address.hpp b/ddsrouter_core/include/ddsrouter_core/types/address/Address.hpp
index fc95a0d..23a2bea 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/address/Address.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/address/Address.hpp
@@ -24,6 +24,8 @@

 #include <fastdds/rtps/common/Locator.h>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -71,7 +73,7 @@ public:
      * @param ip_version ip version (4 or 6)
      * @param transport_protocol transport protocol (UDP or TCP)
      */
-    Address(
+    DDSROUTER_CORE_DllAPI Address(
             const IpType& ip,
             const PortType& port,
             const IpVersion& ip_version,
@@ -85,7 +87,7 @@ public:
      * @param domain address domain name to call DNS
      * @param transport_protocol transport protocol (UDP or TCP)
      */
-    Address(
+    DDSROUTER_CORE_DllAPI Address(
             const PortType& port,
             const IpVersion& ip_version,
             const DomainType& domain,
@@ -98,7 +100,7 @@ public:
      * If the IP is a string with format IPv6, version will be set to IPv6.
      * If the IP has an incorrect formant, version will be set to IPv4 and address will be invalid.
      */
-    Address(
+    DDSROUTER_CORE_DllAPI Address(
             const IpType& ip,
             const PortType& port,
             const TransportProtocol& transport_protocol) noexcept;
@@ -110,35 +112,35 @@ public:
      * @param domain address domain name to call DNS
      * @param transport_protocol transport protocol (UDP or TCP)
      */
-    Address(
+    DDSROUTER_CORE_DllAPI Address(
             const PortType& port,
             const DomainType& domain,
             const TransportProtocol& transport_protocol) noexcept;

     //! Construct a default IP by default values (set in this class)
-    Address();
+    DDSROUTER_CORE_DllAPI Address();

     //! Address Port getter
-    PortType port() const noexcept;
+    DDSROUTER_CORE_DllAPI PortType port() const noexcept;
     //! Address IP getter
-    IpType ip() const noexcept;
+    DDSROUTER_CORE_DllAPI IpType ip() const noexcept;
     //! Address IP version getter
-    IpVersion ip_version() const noexcept;
+    DDSROUTER_CORE_DllAPI IpVersion ip_version() const noexcept;
     //! Address transport protocol version getter
-    TransportProtocol transport_protocol() const noexcept;
+    DDSROUTER_CORE_DllAPI TransportProtocol transport_protocol() const noexcept;

     //! Whether transport is UDP
-    bool is_udp() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_udp() const noexcept;
     //! Whether transport is TCP
-    bool is_tcp() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_tcp() const noexcept;

     //! Whether ip version is IPv4
-    bool is_ipv4() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_ipv4() const noexcept;
     //! Whether ip version is IPv6
-    bool is_ipv6() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_ipv6() const noexcept;

     //! Get FastDDS Locator kind
-    LocatorType get_locator_kind() noexcept;
+    DDSROUTER_CORE_DllAPI LocatorType get_locator_kind() noexcept;

     /**
      * @brief Whether the address is correct
@@ -146,33 +148,33 @@ public:
      * Checks if IP is in correct format regarding the IP version.
      * Checks if Port is correct.
      */
-    virtual bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept;

     //! Minor operator
-    bool operator <(
+    DDSROUTER_CORE_DllAPI bool operator <(
             const Address& other) const noexcept;

     //! Equal operator
-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const Address& other) const noexcept;

     //! Whether string \c ip has correct IPv4 format.
-    static bool is_ipv4_correct(
+    DDSROUTER_CORE_DllAPI static bool is_ipv4_correct(
             const IpType& ip) noexcept;

     //! Whether string \c ip has correct IPv6 format.
-    static bool is_ipv6_correct(
+    DDSROUTER_CORE_DllAPI static bool is_ipv6_correct(
             const IpType& ip) noexcept;

     //! Default port for address when is not set: 11600
-    static PortType default_port() noexcept;
+    DDSROUTER_CORE_DllAPI static PortType default_port() noexcept;
     //! Default ip for address when is not set: 127.0.0.1
-    static IpType default_ip(
+    DDSROUTER_CORE_DllAPI static IpType default_ip(
             IpVersion ip_version = default_ip_version()) noexcept;
     //! Default ip version for address when is not set: IPv4
-    static IpVersion default_ip_version() noexcept;
+    DDSROUTER_CORE_DllAPI static IpVersion default_ip_version() noexcept;
     //! Default transport protocol for address when is not set: UDP
-    static TransportProtocol default_transport_protocol() noexcept;
+    DDSROUTER_CORE_DllAPI static TransportProtocol default_transport_protocol() noexcept;

     /**
      * @brief Return the IP corresponding to the \c domain name given with IP version specified in \c ip_version
@@ -186,7 +188,7 @@ public:
      *
      * @throw DNSException in case an IP for this domain could not be retrieved
      */
-    static IpType resolve_dns(
+    DDSROUTER_CORE_DllAPI static IpType resolve_dns(
             DomainType domain,
             IpVersion ip_version);

@@ -203,7 +205,7 @@ public:
      *
      * @throw DNSException in case an IP for this domain could not be retrieved
      */
-    static std::pair<IpType, IpVersion> resolve_dns(
+    DDSROUTER_CORE_DllAPI static std::pair<IpType, IpVersion> resolve_dns(
             DomainType domain);

 protected:
@@ -235,13 +237,13 @@ protected:
     static const TransportProtocol DEFAULT_TRANSPORT_PROTOCOL_;  // UDP

     // Allow operator << to use domain info
-    friend std::ostream& operator <<(
+    DDSROUTER_CORE_DllAPI friend std::ostream& operator <<(
             std::ostream& output,
             const Address& address);
 };

 //! \c Address to stream serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& output,
         const Address& address);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/address/DiscoveryServerConnectionAddress.hpp b/ddsrouter_core/include/ddsrouter_core/types/address/DiscoveryServerConnectionAddress.hpp
index 0651fbe..e982723 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/address/DiscoveryServerConnectionAddress.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/address/DiscoveryServerConnectionAddress.hpp
@@ -23,6 +23,7 @@
 #include <string>
 #include <vector>

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/address/Address.hpp>
 #include <ddsrouter_core/types/dds/Guid.hpp>

@@ -37,7 +38,8 @@ namespace types {
  * An address will remain in an IP and a Port, IP version and Transport Protocol.
  * This class has several address associated with one \c GuidPrefix in order to connect with
  * a remote Discovery Server.
- */class DiscoveryServerConnectionAddress
+ */
+class DiscoveryServerConnectionAddress
 {
 public:

@@ -47,15 +49,15 @@ public:
      * @param discovery_server_guid_ : Guid Prefix of the remote Discovery Server
      * @param addresses_ collection of addresses
      */
-    DiscoveryServerConnectionAddress(
+    DDSROUTER_CORE_DllAPI DiscoveryServerConnectionAddress(
             GuidPrefix discovery_server_guid,
             std::set<Address> addresses);

     //! Discovery Server \c GuidPrefix Port getter
-    GuidPrefix discovery_server_guid_prefix() const noexcept;
+    DDSROUTER_CORE_DllAPI GuidPrefix discovery_server_guid_prefix() const noexcept;

     //! Addresses getter
-    std::set<Address> addresses() const noexcept;
+    DDSROUTER_CORE_DllAPI std::set<Address> addresses() const noexcept;

     /**
      * @brief Whether the address is correct
@@ -63,10 +65,10 @@ public:
      * Checks if GuidPrefix is correct.
      * Checks if it has at least one correct address.
      */
-    virtual bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept;

     //! Minor operator
-    bool operator <(
+    DDSROUTER_CORE_DllAPI bool operator <(
             const DiscoveryServerConnectionAddress& other) const noexcept;

 protected:
@@ -79,7 +81,7 @@ protected:
 };

 //! \c DiscoveryServerConnectionAddress to stream serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& output,
         const DiscoveryServerConnectionAddress& address);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/dds/Data.hpp b/ddsrouter_core/include/ddsrouter_core/types/dds/Data.hpp
index b2cf078..b204ea6 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/dds/Data.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/dds/Data.hpp
@@ -21,6 +21,7 @@

 #include <fastdds/rtps/common/SerializedPayload.h>

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/dds/Guid.hpp>

 namespace eprosima {
@@ -45,12 +46,12 @@ struct DataReceived
 };

 //! \c octet to stream serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const PayloadUnit& octet);

 //! \c SerializedPayload_t to stream serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const Payload& payload);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/dds/DomainId.hpp b/ddsrouter_core/include/ddsrouter_core/types/dds/DomainId.hpp
index 14d85c7..9452751 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/dds/DomainId.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/dds/DomainId.hpp
@@ -21,6 +21,8 @@

 #include <fastrtps/types/TypesBase.h>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -44,22 +46,22 @@ public:
      *
      * @param discovery_server
      */
-    DomainId (
+    DDSROUTER_CORE_DllAPI DomainId (
             bool discovery_server = false) noexcept;

     //! Standar constructor by number
-    DomainId (
+    DDSROUTER_CORE_DllAPI DomainId (
             const DomainIdType& domain) noexcept;

     //! Return Fast DDS value for Domain ID
-    DomainIdType operator ()() const noexcept;
+    DDSROUTER_CORE_DllAPI DomainIdType operator ()() const noexcept;

     //! Return Fast DDS value for Domain ID
-    DomainIdType domain_id() const noexcept;
+    DDSROUTER_CORE_DllAPI DomainIdType domain_id() const noexcept;

-    bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_valid() const noexcept;

-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const DomainId& other) const noexcept;

 protected:
@@ -78,7 +80,7 @@ protected:
 };

 //! \c DomainId serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& output,
         const DomainId& domain);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/dds/Guid.hpp b/ddsrouter_core/include/ddsrouter_core/types/dds/Guid.hpp
index 998122d..2a08773 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/dds/Guid.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/dds/Guid.hpp
@@ -21,6 +21,7 @@

 #include <fastrtps/rtps/common/Guid.h>

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/dds/GuidPrefix.hpp>

 namespace eprosima {
@@ -29,7 +30,7 @@ namespace core {
 namespace types {

 //! Unique Id of every Endpoint
-class Guid : public fastrtps::rtps::GUID_t
+class DDSROUTER_CORE_DllAPI Guid : public fastrtps::rtps::GUID_t
 {
 public:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/dds/GuidPrefix.hpp b/ddsrouter_core/include/ddsrouter_core/types/dds/GuidPrefix.hpp
index 16cd936..2ecb5a9 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/dds/GuidPrefix.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/dds/GuidPrefix.hpp
@@ -21,6 +21,8 @@

 #include <fastdds/rtps/common/GuidPrefix_t.hpp>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -32,7 +34,7 @@ namespace types {
  * This class extends the \c GuidPrefix_t class in FastDDS, which is a RTPS Participant Unique Id.
  * This class does not belong to class \c Guid due to a design flaw in OOP (parallel hierarchy is the future).
  */
-class GuidPrefix : public fastrtps::rtps::GuidPrefix_t
+class DDSROUTER_CORE_DllAPI GuidPrefix : public fastrtps::rtps::GuidPrefix_t
 {
 public:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/endpoint/Endpoint.hpp b/ddsrouter_core/include/ddsrouter_core/types/endpoint/Endpoint.hpp
index af424be..1308707 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/endpoint/Endpoint.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/endpoint/Endpoint.hpp
@@ -19,6 +19,7 @@
 #ifndef _DDSROUTERCORE_TYPES_ENDPOINT_ENDPOINT_HPP_
 #define _DDSROUTERCORE_TYPES_ENDPOINT_ENDPOINT_HPP_

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/dds/Guid.hpp>
 #include <ddsrouter_core/types/endpoint/QoS.hpp>
 #include <ddsrouter_core/types/topic/RealTopic.hpp>
@@ -46,55 +47,55 @@ class Endpoint
 public:

     //! Default Endpoint that returns an invalid one
-    Endpoint() noexcept;
+    DDSROUTER_CORE_DllAPI Endpoint() noexcept;

     /**
      * Constructor with Endpoint information
      */
-    Endpoint(
+    DDSROUTER_CORE_DllAPI Endpoint(
             const EndpointKind& kind,
             const Guid& guid,
             const QoS& qos,
             const RealTopic& topic) noexcept;

     //! Endpoint kind getter
-    EndpointKind kind() const noexcept;
+    DDSROUTER_CORE_DllAPI EndpointKind kind() const noexcept;

     //! Guid getter
-    Guid guid() const noexcept;
+    DDSROUTER_CORE_DllAPI Guid guid() const noexcept;

     //! QoS getter
-    QoS qos() const noexcept;
+    DDSROUTER_CORE_DllAPI QoS qos() const noexcept;

     //! Topic getter
-    RealTopic topic() const noexcept;
+    DDSROUTER_CORE_DllAPI RealTopic topic() const noexcept;

     //! Whether the endpoint referenced is currently active
-    bool active() const noexcept;
+    DDSROUTER_CORE_DllAPI bool active() const noexcept;

     //! Set active status of the Endpoint
-    void active(
+    DDSROUTER_CORE_DllAPI void active(
             bool status) noexcept;

     //! Whether the endpoint referenced is valid
-    bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_valid() const noexcept;

     /********************
     * SPECIFIC GETTERS *
     ********************/

     //! Whether the endpoint is a writer
-    bool is_writer() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_writer() const noexcept;

     //! Whether the endpoint is a reader
-    bool is_reader() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_reader() const noexcept;

     //! Copy operator
-    Endpoint& operator =(
+    DDSROUTER_CORE_DllAPI Endpoint& operator =(
             const Endpoint& other) noexcept;

     //! Equality operator (does not take \c active_ into consideration)
-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const Endpoint& other) const noexcept;

 protected:
@@ -115,7 +116,7 @@ protected:
     bool active_;

     // Allow operator << to use private variables
-    friend std::ostream& operator <<(
+    DDSROUTER_CORE_DllAPI friend std::ostream& operator <<(
             std::ostream&,
             const Endpoint&);
 };
@@ -123,7 +124,7 @@ protected:
 /**
  * @brief \c Endpoint to stream serialization
  */
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const Endpoint& endpoint);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/endpoint/QoS.hpp b/ddsrouter_core/include/ddsrouter_core/types/endpoint/QoS.hpp
index 0b4f84e..030f956 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/endpoint/QoS.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/endpoint/QoS.hpp
@@ -21,6 +21,8 @@

 #include <fastdds/rtps/common/Types.h>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -35,7 +37,7 @@ using ReliabilityKind = eprosima::fastrtps::rtps::ReliabilityKind_t;
 /**
  * Collection of attributes of an Endpoint
  */
-class QoS
+class DDSROUTER_CORE_DllAPI QoS
 {
 public:

@@ -71,7 +73,7 @@ protected:
     ReliabilityKind reliability_;

     // Allow operator << to use private variables
-    friend std::ostream& operator <<(
+    DDSROUTER_CORE_DllAPI friend std::ostream& operator <<(
             std::ostream&,
             const QoS&);
 };
@@ -79,7 +81,7 @@ protected:
 /**
  * @brief \c QoS to stream serialization
  */
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const QoS& qos);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantId.hpp b/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantId.hpp
index e7f741e..ee4db3f 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantId.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantId.hpp
@@ -21,6 +21,8 @@

 #include <string>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -40,14 +42,14 @@ public:
     /**
      * @brief Construct a new Participant invalid Id object
      */
-    ParticipantId() noexcept;
+    DDSROUTER_CORE_DllAPI ParticipantId() noexcept;

     /**
      * @brief Construct a new Participant Id object from a string value
      *
      * @param id uniquely identifies the new \c ParticipantId
      */
-    ParticipantId(
+    DDSROUTER_CORE_DllAPI ParticipantId(
             const std::string& id) noexcept;

     /**
@@ -57,14 +59,14 @@ public:
      *
      * @return true if this Id is valid. False otherwise.
      */
-    bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_valid() const noexcept;

     /**
      * @brief Name that uniquely identifies
      *
      * @return key string that represents the ID
      */
-    std::string id_name() const noexcept;
+    DDSROUTER_CORE_DllAPI std::string id_name() const noexcept;

     /////
     // OPERATOR OVERLOAD
@@ -77,7 +79,7 @@ public:
      * @param [in] other \c ParticipantId to compare with
      * @return true if this Ids are equal. False otherwise.
      */
-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const ParticipantId& other) const noexcept;

     /**
@@ -88,7 +90,7 @@ public:
      * @param [in] other \c ParticipantId to compare with
      * @return true if this Id is lower than \c other . False otherwise.
      */
-    bool operator <(
+    DDSROUTER_CORE_DllAPI bool operator <(
             const ParticipantId& other) const noexcept;

     /////
@@ -101,7 +103,7 @@ public:
      *
      * @return ParticipantId invalid
      */
-    static ParticipantId invalid() noexcept;
+    DDSROUTER_CORE_DllAPI static ParticipantId invalid() noexcept;

     /**
      * @brief Check whether a string is valid to create a \c ParticipantId
@@ -109,7 +111,7 @@ public:
      * @param [in] id string as unique key
      * @return true in case the string is valid for an ID. False otherwise
      */
-    static bool is_valid_id(
+    DDSROUTER_CORE_DllAPI static bool is_valid_id(
             const std::string& id) noexcept;

 protected:
@@ -122,7 +124,7 @@ protected:
 };

 //! \c ParticipantId to stream serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const ParticipantId& id);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantKind.hpp b/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantKind.hpp
index 282b5a4..b469091 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantKind.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/participant/ParticipantKind.hpp
@@ -24,6 +24,8 @@
 #include <string>
 #include <vector>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -54,10 +56,10 @@ public:
     };

     //! Default constructor that returns an Invalid Participant Kind
-    ParticipantKind() noexcept;
+    DDSROUTER_CORE_DllAPI ParticipantKind() noexcept;

     //! Constructor by value of the ParticipantKind enum
-    ParticipantKind(
+    DDSROUTER_CORE_DllAPI ParticipantKind(
             ParticipantKindType value) noexcept;

     /**
@@ -65,20 +67,20 @@ public:
      *
      * @return true if valid. False otherwise
      */
-    bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI bool is_valid() const noexcept;

     //! Convert this ParticipantKind to string using the << operator
-    std::string to_string() const noexcept;
+    DDSROUTER_CORE_DllAPI std::string to_string() const noexcept;

     //! Return the enum value of this object
-    ParticipantKindType operator ()() const noexcept;
+    DDSROUTER_CORE_DllAPI ParticipantKindType operator ()() const noexcept;

     //! Minor operator
-    bool operator <(
+    DDSROUTER_CORE_DllAPI bool operator <(
             const ParticipantKind& other) const noexcept;

     //! Equal operator
-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const ParticipantKind& other) const noexcept;

     /**
@@ -93,10 +95,10 @@ public:
      * @param [in] kind : string with the name of the kind to build
      * @return ParticipantKind value, \c INVALID if \c kind does not refer to any existing kind
      */
-    static ParticipantKind participant_kind_from_name(
+    DDSROUTER_CORE_DllAPI static ParticipantKind participant_kind_from_name(
             std::string kind) noexcept;

-    static std::vector<ParticipantKind> all_valid_participant_kinds() noexcept;
+    DDSROUTER_CORE_DllAPI static std::vector<ParticipantKind> all_valid_participant_kinds() noexcept;

 protected:

@@ -107,13 +109,13 @@ protected:
     static const std::map<ParticipantKindType, std::vector<std::string>> participant_kind_with_aliases_;

     // Allow operator << to use \c participant_kind_with_aliases_
-    friend std::ostream& operator <<(
+    DDSROUTER_CORE_DllAPI friend std::ostream& operator <<(
             std::ostream& os,
             const ParticipantKind& kind);
 };

 //! \c ParticipantKind to stream serializator
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const ParticipantKind& a);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfiguration.hpp b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfiguration.hpp
index 7956fb2..b0ab975 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfiguration.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfiguration.hpp
@@ -21,6 +21,8 @@

 #include <string>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -44,17 +46,17 @@ class TlsConfiguration
 {
 public:

-    TlsConfiguration();
+    DDSROUTER_CORE_DllAPI TlsConfiguration();

-    virtual bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept;

-    virtual bool is_active() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool is_active() const noexcept;

-    virtual bool can_be_client() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_client() const noexcept;

-    virtual bool can_be_server() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_server() const noexcept;

-    virtual TlsConfigurationKind tls_kind() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual TlsConfigurationKind tls_kind() const noexcept;

 protected:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationBoth.hpp b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationBoth.hpp
index df7320a..808dbe9 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationBoth.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationBoth.hpp
@@ -21,6 +21,7 @@

 #include <string>

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/security/tls/TlsConfigurationServer.hpp>
 #include <ddsrouter_core/types/security/tls/TlsConfigurationClient.hpp>

@@ -37,20 +38,20 @@ class TlsConfigurationBoth : public TlsConfigurationServer, public TlsConfigurat
 {
 public:

-    TlsConfigurationBoth(
+    DDSROUTER_CORE_DllAPI TlsConfigurationBoth(
             const std::string& certificate_authority_file,
             const std::string& private_key_file_password,
             const std::string& private_key_file,
             const std::string& certificate_chain_file,
             const std::string& dh_params_file);

-    virtual bool is_valid() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept override;

-    virtual bool is_active() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool is_active() const noexcept override;

-    virtual bool can_be_client() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_client() const noexcept override;

-    virtual bool can_be_server() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_server() const noexcept override;
 };

 } /* namespace security */
diff --git a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationClient.hpp b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationClient.hpp
index aa23654..c110266 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationClient.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationClient.hpp
@@ -21,6 +21,7 @@

 #include <string>

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/security/tls/TlsConfiguration.hpp>

 namespace eprosima {
@@ -36,16 +37,16 @@ class TlsConfigurationClient : virtual public TlsConfiguration
 {
 public:

-    TlsConfigurationClient(
+    DDSROUTER_CORE_DllAPI TlsConfigurationClient(
             const std::string& certificate_authority_file);

-    virtual bool is_valid() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept override;

-    virtual bool is_active() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool is_active() const noexcept override;

-    virtual bool can_be_client() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_client() const noexcept override;

-    virtual bool can_be_server() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_server() const noexcept override;

     std::string certificate_authority_file() const noexcept;

diff --git a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationServer.hpp b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationServer.hpp
index f152d6a..808f8b7 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationServer.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/security/tls/TlsConfigurationServer.hpp
@@ -21,6 +21,7 @@

 #include <string>

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/security/tls/TlsConfiguration.hpp>

 namespace eprosima {
@@ -36,27 +37,27 @@ class TlsConfigurationServer : virtual public TlsConfiguration
 {
 public:

-    TlsConfigurationServer(
+    DDSROUTER_CORE_DllAPI TlsConfigurationServer(
             const std::string& private_key_file_password,
             const std::string& private_key_file,
             const std::string& certificate_chain_file,
             const std::string& dh_params_file);

-    virtual bool is_valid() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept override;

-    virtual bool is_active() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool is_active() const noexcept override;

-    virtual bool can_be_client() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_client() const noexcept override;

-    virtual bool can_be_server() const noexcept override;
+    DDSROUTER_CORE_DllAPI virtual bool can_be_server() const noexcept override;

-    std::string private_key_file_password() const noexcept;
+    DDSROUTER_CORE_DllAPI std::string private_key_file_password() const noexcept;

-    std::string private_key_file() const noexcept;
+    DDSROUTER_CORE_DllAPI std::string private_key_file() const noexcept;

-    std::string certificate_chain_file() const noexcept;
+    DDSROUTER_CORE_DllAPI std::string certificate_chain_file() const noexcept;

-    std::string dh_params_file() const noexcept;
+    DDSROUTER_CORE_DllAPI std::string dh_params_file() const noexcept;

 protected:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/topic/FilterTopic.hpp b/ddsrouter_core/include/ddsrouter_core/types/topic/FilterTopic.hpp
index 98fe555..f69b4b5 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/topic/FilterTopic.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/topic/FilterTopic.hpp
@@ -19,6 +19,7 @@
 #ifndef _DDSROUTERCORE_TYPES_TOPIC_FILTERTOPIC_HPP_
 #define _DDSROUTERCORE_TYPES_TOPIC_FILTERTOPIC_HPP_

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/topic/Topic.hpp>
 #include <ddsrouter_core/types/topic/RealTopic.hpp>

@@ -35,7 +36,7 @@ class FilterTopic : public Topic
 public:

     //! Constructor by topic name, topic type name, and (optionally) has_keyed_set and topic kind
-    FilterTopic(
+    DDSROUTER_CORE_DllAPI FilterTopic(
             const std::string& topic_name,
             const std::string& topic_type,
             bool has_keyed_set = false,
@@ -70,7 +71,7 @@ public:
             const RealTopic& real_topic) const = 0;

     //! \c has_keyed_set_ getter
-    bool has_keyed_set() const;
+    DDSROUTER_CORE_DllAPI bool has_keyed_set() const;

 protected:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/topic/RealTopic.hpp b/ddsrouter_core/include/ddsrouter_core/types/topic/RealTopic.hpp
index 58ea1cb..1a425f4 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/topic/RealTopic.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/topic/RealTopic.hpp
@@ -19,6 +19,7 @@
 #ifndef _DDSROUTERCORE_TYPES_TOPIC_REALTOPIC_HPP_
 #define _DDSROUTERCORE_TYPES_TOPIC_REALTOPIC_HPP_

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/topic/Topic.hpp>

 namespace eprosima {
@@ -35,7 +36,7 @@ struct RealTopic : public Topic
     using Topic::Topic;

     //! Default non valid topic
-    RealTopic();
+    DDSROUTER_CORE_DllAPI RealTopic();

     /**
      * Whether a topic name and topic type name could be used as a valid real DDS topic
@@ -45,11 +46,11 @@ struct RealTopic : public Topic
      *
      * @return: true if a topic can be formed by these values
      */
-    static bool is_real_topic(
+    DDSROUTER_CORE_DllAPI static bool is_real_topic(
             const std::string& topic_name,
             const std::string& type_name) noexcept;

-    bool is_valid() const noexcept override;
+    DDSROUTER_CORE_DllAPI bool is_valid() const noexcept override;

 protected:

diff --git a/ddsrouter_core/include/ddsrouter_core/types/topic/Topic.hpp b/ddsrouter_core/include/ddsrouter_core/types/topic/Topic.hpp
index 9da0f8b..4e739fa 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/topic/Topic.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/topic/Topic.hpp
@@ -22,6 +22,8 @@
 #include <iostream>
 #include <string>

+#include <ddsrouter_core/library/library_dll.h>
+
 namespace eprosima {
 namespace ddsrouter {
 namespace core {
@@ -35,23 +37,23 @@ struct Topic
     /**
      * Std constructor by topic name, topic type name and (optionally) topic kind
      */
-    Topic(
+    DDSROUTER_CORE_DllAPI Topic(
             std::string topic_name,
             std::string topic_type,
             bool topic_with_key = false) noexcept;

     //! Copy constructor
-    Topic& operator =(
+    DDSROUTER_CORE_DllAPI Topic& operator =(
             const Topic& other);

     //! Topic name getter
-    const std::string& topic_name() const;
+    DDSROUTER_CORE_DllAPI const std::string& topic_name() const;

     //! Topic type name getter
-    const std::string& topic_type() const;
+    DDSROUTER_CORE_DllAPI const std::string& topic_type() const;

     //! Topic kind getter
-    bool topic_with_key() const;
+    DDSROUTER_CORE_DllAPI bool topic_with_key() const;

     // OPERATOR OVERLOAD
     /**
@@ -59,7 +61,7 @@ struct Topic
      *
      * It compares that the topic name and topic type are equal
      */
-    bool operator ==(
+    DDSROUTER_CORE_DllAPI bool operator ==(
             const Topic& other) const;

     /**
@@ -67,10 +69,10 @@ struct Topic
      *
      * It compares first the topic name, and if it is the same, it compares the topic type
      */
-    bool operator <(
+    DDSROUTER_CORE_DllAPI bool operator <(
             const Topic& other) const;

-    virtual bool is_valid() const noexcept;
+    DDSROUTER_CORE_DllAPI virtual bool is_valid() const noexcept;

 protected:

@@ -90,7 +92,7 @@ protected:
  * It prints the topic name, type and kind inside "{}" and separated by ";"
  * Example: {TopicName;TopicType;no_key}
  */
-std::ostream& operator <<(
+DDSROUTER_CORE_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const Topic& a);

diff --git a/ddsrouter_core/include/ddsrouter_core/types/topic/WildcardTopic.hpp b/ddsrouter_core/include/ddsrouter_core/types/topic/WildcardTopic.hpp
index 9c13098..02b8c68 100644
--- a/ddsrouter_core/include/ddsrouter_core/types/topic/WildcardTopic.hpp
+++ b/ddsrouter_core/include/ddsrouter_core/types/topic/WildcardTopic.hpp
@@ -19,6 +19,7 @@
 #ifndef _DDSROUTERCORE_TYPES_TOPIC_WILDCARDTOPIC_HPP_
 #define _DDSROUTERCORE_TYPES_TOPIC_WILDCARDTOPIC_HPP_

+#include <ddsrouter_core/library/library_dll.h>
 #include <ddsrouter_core/types/topic/FilterTopic.hpp>

 namespace eprosima {
@@ -37,7 +38,7 @@ public:
     using FilterTopic::FilterTopic;

     //! Constructor that allows any type
-    WildcardTopic(
+    DDSROUTER_CORE_DllAPI WildcardTopic(
             const std::string& topic_name,
             bool has_keyed_set = false,
             bool topic_with_key = false) noexcept;
@@ -45,7 +46,7 @@ public:
     // TODO: extend test and documentation to admit ? and []

     //! Override \c contains method from \c FilterTopic
-    bool contains(
+    DDSROUTER_CORE_DllAPI bool contains(
             const FilterTopic& other) const override;

     /**
@@ -53,7 +54,7 @@ public:
      *
      * It uses \c fnmatch function, so it also contemplates ? and [] apart from *
      */
-    bool matches(
+    DDSROUTER_CORE_DllAPI bool matches(
             const RealTopic& other) const override;
 };

diff --git a/ddsrouter_core/include/library/eProsima_auto_link.h.in b/ddsrouter_core/include/library/eProsima_auto_link.h.in
index f3575fb..c709384 100644
--- a/ddsrouter_core/include/library/eProsima_auto_link.h.in
+++ b/ddsrouter_core/include/library/eProsima_auto_link.h.in
@@ -14,7 +14,7 @@

 /*
    Expected defines.
-   - EPROSIMA_LIB_NAME
+   - EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MINOR
  */
@@ -42,16 +42,16 @@
     #endif // if (defined(_DLL) || defined(_RTLDLL)) && defined(EPROSIMA_DYN_LINK)

 // Include library
-    #if defined(EPROSIMA_LIB_NAME) \
+    #if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) \
     && defined(EPROSIMA_LIB_PREFIX) \
     && defined(EPROSIMA_LIB_DEBUG_TAG) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
         #pragma \
-    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
+    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
     #else
     #error "Some required macros where not defined"
-    #endif // if defined(EPROSIMA_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
+    #endif // if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)

 #endif // _MSC_VER

@@ -60,9 +60,9 @@
 #undef EPROSIMA_LIB_PREFIX
 #endif // ifdef EPROSIMA_LIB_PREFIX

-#ifdef EPROSIMA_LIB_NAME
-#undef EPROSIMA_LIB_NAME
-#endif // ifdef EPROSIMA_LIB_NAME
+#ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#undef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#endif // ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME

 #ifdef EPROSIMA_LIB_DEBUG_TAG
 #undef EPROSIMA_LIB_DEBUG_TAG
diff --git a/ddsrouter_core/include/library/library_dll.h.in b/ddsrouter_core/include/library/library_dll.h.in
index ff78a44..304ee3e 100644
--- a/ddsrouter_core/include/library/library_dll.h.in
+++ b/ddsrouter_core/include/library/library_dll.h.in
@@ -64,7 +64,7 @@
     && !defined(@SUBMODULE_PROJECT_MACROS@_NO_LIB)

 // Set properties.
-#define EPROSIMA_LIB_NAME @SUBMODULE_PROJECT_NAME@
+#define EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME @SUBMODULE_PROJECT_NAME@

 #if defined(EPROSIMA_ALL_DYN_LINK) || defined(@SUBMODULE_PROJECT_MACROS@_DYN_LINK)
 #define EPROSIMA_DYN_LINK
diff --git a/ddsrouter_core/project_settings.cmake b/ddsrouter_core/project_settings.cmake
index 460d91c..0ea5c80 100644
--- a/ddsrouter_core/project_settings.cmake
+++ b/ddsrouter_core/project_settings.cmake
@@ -31,6 +31,6 @@ set(SUBMODULE_PROJECT_DEPENDENCIES
     ${SUBMODULE_PROJECT_FIND_PACKAGES})

 set(SUBMODULE_PROJECT_MACROS
-    DDSROUTERCORE)
+    DDSROUTER_CORE)

 # set(SUBMODULE_THIRDPARTY_HEADERONLY_PACKAGES )
diff --git a/ddsrouter_core/src/cpp/CMakeLists.txt b/ddsrouter_core/src/cpp/CMakeLists.txt
index 9fcd8fe..3320d4f 100644
--- a/ddsrouter_core/src/cpp/CMakeLists.txt
+++ b/ddsrouter_core/src/cpp/CMakeLists.txt
@@ -57,8 +57,8 @@ set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJ

 # Define Public API
 target_compile_definitions(${PROJECT_NAME}
-    PUBLIC
-        PROJECT_SOURCE
+    PRIVATE
+        ${SUBMODULE_PROJECT_MACROS}_SOURCE
     )

 if(MSVC)
diff --git a/ddsrouter_core/src/cpp/core/DDSRouterImpl.cpp b/ddsrouter_core/src/cpp/core/DDSRouterImpl.cpp
index 78ddf58..f2ae2d8 100644
--- a/ddsrouter_core/src/cpp/core/DDSRouterImpl.cpp
+++ b/ddsrouter_core/src/cpp/core/DDSRouterImpl.cpp
@@ -41,10 +41,7 @@ DDSRouterImpl::DDSRouterImpl(
     : payload_pool_(new MapPayloadPool())
     , participants_database_(new ParticipantsDatabase())
     , discovery_database_(new DiscoveryDatabase())
-    , allowed_topics_()
-    , bridges_()
     , configuration_(configuration)
-    , participant_factory_()
     , enabled_(false)
 {
     logDebug(DDSROUTER, "Creating DDS Router.");
@@ -285,7 +282,7 @@ void DDSRouterImpl::init_participants_()
                 new_participant->id(),
                 new_participant);
         }
-        catch (const utils::InconsistencyException& e)
+        catch (const utils::InconsistencyException& )
         {
             throw utils::ConfigurationException(utils::Formatter()
                           << "Participant ids must be unique. The id " << new_participant->id() << " is duplicated.");
diff --git a/ddsrouter_core/src/cpp/core/ParticipantFactory.cpp b/ddsrouter_core/src/cpp/core/ParticipantFactory.cpp
index 7cf775b..5c93e29 100644
--- a/ddsrouter_core/src/cpp/core/ParticipantFactory.cpp
+++ b/ddsrouter_core/src/cpp/core/ParticipantFactory.cpp
@@ -133,12 +133,8 @@ std::shared_ptr<IParticipant> ParticipantFactory::create_participant(
 void ParticipantFactory::remove_participant(
         std::shared_ptr<IParticipant> participant)
 {
-    switch (participant->kind()())
-    {
-        default:
-            // Rest of participants do not require specific destructor
-            break;
-    }
+    // Currently there are no Participants that requires specific remove functionality.
+    // Add it in a switch case if in the future some functionality is required.
 }

 } /* namespace core */
diff --git a/ddsrouter_core/src/cpp/reader/implementations/auxiliar/DummyReader.cpp b/ddsrouter_core/src/cpp/reader/implementations/auxiliar/DummyReader.cpp
index 779f7d8..c672a4f 100644
--- a/ddsrouter_core/src/cpp/reader/implementations/auxiliar/DummyReader.cpp
+++ b/ddsrouter_core/src/cpp/reader/implementations/auxiliar/DummyReader.cpp
@@ -59,7 +59,7 @@ utils::ReturnCode DummyReader::take_(

     // Move Payload to DDSRouter Payload Pool
     payload_pool_->get_payload(
-        next_data_to_send.payload.size() * sizeof(PayloadUnit),
+        static_cast<uint32_t>(next_data_to_send.payload.size() * sizeof(PayloadUnit)),
         data->payload);

     // Set values in Payload as the data was not in the DDSRouter Payload Pool
diff --git a/ddsrouter_core/src/cpp/types/address/Address.cpp b/ddsrouter_core/src/cpp/types/address/Address.cpp
index 02228c6..703bf44 100644
--- a/ddsrouter_core/src/cpp/types/address/Address.cpp
+++ b/ddsrouter_core/src/cpp/types/address/Address.cpp
@@ -45,12 +45,12 @@ Address::Address(
         const IpVersion& ip_version,
         const TransportProtocol& transport_protocol) noexcept
     : ip_(ip)
-    , port_(port)
-    , ip_version_(ip_version)
-    , transport_protocol_(transport_protocol)
     , domain_()
     , has_domain_(false)
     , has_valid_domain_(false)
+    , port_(port)
+    , ip_version_(ip_version)
+    , transport_protocol_(transport_protocol)
 {
 }

@@ -60,19 +60,19 @@ Address::Address(
         const DomainType& domain,
         const TransportProtocol& transport_protocol) noexcept
     : ip_()
-    , port_(port)
-    , ip_version_(ip_version)
-    , transport_protocol_(transport_protocol)
     , domain_(domain)
     , has_domain_(true)
     , has_valid_domain_(false)
+    , port_(port)
+    , ip_version_(ip_version)
+    , transport_protocol_(transport_protocol)
 {
     try
     {
         ip_ = Address::resolve_dns(domain_, ip_version_);
         has_valid_domain_ = true;
     }
-    catch (const utils::DNSException& e)
+    catch (const utils::DNSException& )
     {
         logWarning(
             DDSROUTER_ADDRESS, "Address created without IP because given domain " << domain << " was not found.");
@@ -96,11 +96,11 @@ Address::Address(
         const DomainType& domain,
         const TransportProtocol& transport_protocol) noexcept
     : ip_()
-    , port_(port)
-    , transport_protocol_(transport_protocol)
     , domain_(domain)
     , has_domain_(true)
     , has_valid_domain_(false)
+    , port_(port)
+    , transport_protocol_(transport_protocol)
 {
     try
     {
@@ -109,7 +109,7 @@ Address::Address(
         ip_version_ = dns_respone.second;
         has_valid_domain_ = true;
     }
-    catch (const utils::DNSException& e)
+    catch (const utils::DNSException& )
     {
         logWarning(
             DDSROUTER_ADDRESS, "Address created without IP because given domain " << domain << " was not found.");
diff --git a/ddsrouter_core/src/cpp/types/dds/Data.cpp b/ddsrouter_core/src/cpp/types/dds/Data.cpp
index 1e9a7de..2b536e6 100644
--- a/ddsrouter_core/src/cpp/types/dds/Data.cpp
+++ b/ddsrouter_core/src/cpp/types/dds/Data.cpp
@@ -40,7 +40,7 @@ std::ostream& operator <<(
 {
     os << "Payload{";

-    for (int i = 0; (payload.length != 0) && (i < (payload.length - 1)); ++i)
+    for (uint32_t i = 0; (payload.length != 0) && (i < (payload.length - 1)); ++i)
     {
         os << payload.data[i] << " ";
     }
diff --git a/ddsrouter_core/src/cpp/types/security/tls/TlsConfigurationBoth.cpp b/ddsrouter_core/src/cpp/types/security/tls/TlsConfigurationBoth.cpp
index debc265..f63b42f 100644
--- a/ddsrouter_core/src/cpp/types/security/tls/TlsConfigurationBoth.cpp
+++ b/ddsrouter_core/src/cpp/types/security/tls/TlsConfigurationBoth.cpp
@@ -32,12 +32,12 @@ TlsConfigurationBoth::TlsConfigurationBoth(
         const std::string& certificate_chain_file,
         const std::string& dh_params_file)
     : TlsConfiguration(TLS_BOTH)
-    , TlsConfigurationClient(certificate_authority_file)
     , TlsConfigurationServer(
         private_key_file_password,
         private_key_file,
         certificate_chain_file,
         dh_params_file)
+    , TlsConfigurationClient(certificate_authority_file)
 {
 }

diff --git a/ddsrouter_core/src/cpp/writer/implementations/auxiliar/DummyWriter.cpp b/ddsrouter_core/src/cpp/writer/implementations/auxiliar/DummyWriter.cpp
index c4ca45e..7883175 100644
--- a/ddsrouter_core/src/cpp/writer/implementations/auxiliar/DummyWriter.cpp
+++ b/ddsrouter_core/src/cpp/writer/implementations/auxiliar/DummyWriter.cpp
@@ -36,7 +36,7 @@ utils::ReturnCode DummyWriter::write_(
         new_data_to_store.source_guid = data->source_guid;

         // Copying data as it should not be stored in PayloadPool
-        for (int i = 0; i < data->payload.length; i++)
+        for (uint32_t i = 0; i < data->payload.length; i++)
         {
             new_data_to_store.payload.push_back(data->payload.data[i]);
         }
diff --git a/ddsrouter_core/src/cpp/writer/implementations/rtps/Writer.cpp b/ddsrouter_core/src/cpp/writer/implementations/rtps/Writer.cpp
index 9e1aea5..ea4ff75 100644
--- a/ddsrouter_core/src/cpp/writer/implementations/rtps/Writer.cpp
+++ b/ddsrouter_core/src/cpp/writer/implementations/rtps/Writer.cpp
@@ -102,13 +102,13 @@ Writer::~Writer()
 utils::ReturnCode Writer::write_(
         std::unique_ptr<DataReceived>& data) noexcept
 {
-    uint32_t data_size = data->payload.length;

     // Take new Change from history
     fastrtps::rtps::CacheChange_t* new_change = rtps_writer_->new_change(eprosima::fastrtps::rtps::ChangeKind_t::ALIVE);

     // TODO : Set method to remove old changes in order to get a new one
     // In case it fails, remove old changes from history and try again
+    // uint32_t data_size = data->payload.length;
     // if (!new_change)
     // {
     //     rtps_writer_->remove_older_changes(1);
diff --git a/ddsrouter_core/test/TestUtils/TestLogHandler.hpp b/ddsrouter_core/test/TestUtils/TestLogHandler.hpp
index d0adc87..1017061 100644
--- a/ddsrouter_core/test/TestUtils/TestLogHandler.hpp
+++ b/ddsrouter_core/test/TestUtils/TestLogHandler.hpp
@@ -42,16 +42,15 @@ public:

 protected:

-    uint32_t max_severe_logs_;
-    uint32_t expected_severe_logs_;
-
     /**
      * @brief Pointer to the event handler log consumer
      *
      * @attention: this must be a raw pointer as Fast takes ownership of the consumer.
      */
-
     event::LogSevereEventHandler* log_consumer_;
+
+    uint32_t expected_severe_logs_;
+    uint32_t max_severe_logs_;
 };

 } /* namespace test */
diff --git a/ddsrouter_core/test/TestUtils/test_utils.cpp b/ddsrouter_core/test/TestUtils/test_utils.cpp
index f9237c8..74c1c0f 100644
--- a/ddsrouter_core/test/TestUtils/test_utils.cpp
+++ b/ddsrouter_core/test/TestUtils/test_utils.cpp
@@ -32,7 +32,7 @@ Guid random_guid(
         uint16_t seed /* = 1 */)
 {
     Guid guid;
-    guid.entityId.value[3] = seed;
+    guid.entityId.value[3] = static_cast<eprosima::fastrtps::rtps::octet>(seed);
     guid.guidPrefix.value[0] = 0x01;
     guid.guidPrefix.value[1] = 0x0f;
     return guid;
diff --git a/ddsrouter_core/test/blackbox/implementations/ImplementationsTest.cpp b/ddsrouter_core/test/blackbox/implementations/ImplementationsTest.cpp
index 317a822..ba7d1d3 100644
--- a/ddsrouter_core/test/blackbox/implementations/ImplementationsTest.cpp
+++ b/ddsrouter_core/test/blackbox/implementations/ImplementationsTest.cpp
@@ -72,7 +72,11 @@ TEST(ImplementationsTest, solo_participant_implementation)
  */
 TEST(ImplementationsTest, pair_implementation)
 {
-    test::TestLogHandler test_log_handler;
+    // TODO: Change to warning when fastdds warning:
+    // [RTPS_MSG_OUT Warning] Error receiving data: receive_from: A blocking operation was interrupted by a call to WSACancelBlockingCall.:
+    // A blocking operation was interrupted by a call to WSACancelBlockingCall. - 0000016CEBD18C10 (0000016CEBD17A40) ->
+    // Function eprosima::fastdds::rtps::UDPChannelResource::Receive
+    test::TestLogHandler test_log_handler(utils::Log::Kind::Error);

     // For each Participant Kind
     for (ParticipantKind kind : ParticipantKind::all_valid_participant_kinds())
@@ -109,7 +113,11 @@ TEST(ImplementationsTest, pair_implementation)
  */
 TEST(ImplementationsTest, pair_implementation_with_topic)
 {
-    test::TestLogHandler test_log_handler;
+    // TODO: Change to warning when fastdds warning:
+    // [RTPS_MSG_OUT Warning] Error receiving data: receive_from: A blocking operation was interrupted by a call to WSACancelBlockingCall.:
+    // A blocking operation was interrupted by a call to WSACancelBlockingCall. - 0000016CEBD18C10 (0000016CEBD17A40) ->
+    // Function eprosima::fastdds::rtps::UDPChannelResource::Receive
+    test::TestLogHandler test_log_handler(utils::Log::Kind::Error);

     // For each Participant kind
     for (ParticipantKind kind : ParticipantKind::all_valid_participant_kinds())
@@ -150,7 +158,11 @@ TEST(ImplementationsTest, pair_implementation_with_topic)
  */
 TEST(ImplementationsTest, all_implementations)
 {
-    test::TestLogHandler test_log_handler;
+    // TODO: Change to warning when fastdds warning:
+    // [RTPS_MSG_OUT Warning] Error receiving data: receive_from: A blocking operation was interrupted by a call to WSACancelBlockingCall.:
+    // A blocking operation was interrupted by a call to WSACancelBlockingCall. - 0000016CEBD18C10 (0000016CEBD17A40) ->
+    // Function eprosima::fastdds::rtps::UDPChannelResource::Receive
+    test::TestLogHandler test_log_handler(utils::Log::Kind::Error);

     {
         // Set topic to active
diff --git a/ddsrouter_event/cmake/test/cmake_test_utils.cmake b/ddsrouter_event/cmake/test/cmake_test_utils.cmake
index 3821df1..193a9f8 100644
--- a/ddsrouter_event/cmake/test/cmake_test_utils.cmake
+++ b/ddsrouter_event/cmake/test/cmake_test_utils.cmake
@@ -129,7 +129,7 @@ function(add_test_executable TEST_EXECUTABLE_NAME TEST_SOURCES TEST_NAME TEST_LI
     )

     if(MSVC)
-        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0)
+        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0 ${SUBMODULE_PROJECT_MACROS}_SOURCE)
     endif(MSVC)

     target_include_directories(${TEST_EXECUTABLE_NAME} PRIVATE
diff --git a/ddsrouter_event/include/ddsrouter_event/FileWatcherHandler.hpp b/ddsrouter_event/include/ddsrouter_event/FileWatcherHandler.hpp
index 04234e4..4300fca 100644
--- a/ddsrouter_event/include/ddsrouter_event/FileWatcherHandler.hpp
+++ b/ddsrouter_event/include/ddsrouter_event/FileWatcherHandler.hpp
@@ -23,6 +23,7 @@
 #include <string>

 #include <ddsrouter_event/EventHandler.hpp>
+#include <ddsrouter_event/library/library_dll.h>

 namespace eprosima {
 namespace ddsrouter {
@@ -47,7 +48,7 @@ public:
      *
      * @param file_path : path for the file to watch
      */
-    FileWatcherHandler(
+    DDSROUTER_EVENT_DllAPI FileWatcherHandler(
             std::string file_path);


@@ -57,7 +58,7 @@ public:
      * @param file_path : path for the file to watch
      * @param callback : function that will be called when the event raises.
      */
-    FileWatcherHandler(
+    DDSROUTER_EVENT_DllAPI FileWatcherHandler(
             std::function<void(std::string)> callback,
             std::string file_path);

@@ -66,7 +67,7 @@ public:
      *
      * Calls \c unset_callback
      */
-    ~FileWatcherHandler();
+    DDSROUTER_EVENT_DllAPI ~FileWatcherHandler();

 protected:

diff --git a/ddsrouter_event/include/ddsrouter_event/LogEventHandler.hpp b/ddsrouter_event/include/ddsrouter_event/LogEventHandler.hpp
index 31d3f64..92bf6f8 100644
--- a/ddsrouter_event/include/ddsrouter_event/LogEventHandler.hpp
+++ b/ddsrouter_event/include/ddsrouter_event/LogEventHandler.hpp
@@ -24,6 +24,7 @@

 #include <ddsrouter_utils/Log.hpp>
 #include <ddsrouter_event/EventHandler.hpp>
+#include <ddsrouter_event/library/library_dll.h>

 namespace eprosima {
 namespace ddsrouter {
@@ -50,7 +51,7 @@ public:
      *
      * @param callback callback to call every time a log entry is consumed.
      */
-    LogEventHandler(
+    DDSROUTER_EVENT_DllAPI LogEventHandler(
             std::function<void(utils::Log::Entry)> callback);

     /**
@@ -58,9 +59,9 @@ public:
      *
      * Calls \c unset_callback
      */
-    ~LogEventHandler();
+    DDSROUTER_EVENT_DllAPI ~LogEventHandler();

-    void Consume(
+    DDSROUTER_EVENT_DllAPI void Consume(
             const utils::Log::Entry& entry) override;

 protected:
diff --git a/ddsrouter_event/include/ddsrouter_event/LogSevereEventHandler.hpp b/ddsrouter_event/include/ddsrouter_event/LogSevereEventHandler.hpp
index 5bf6600..7b88a0a 100644
--- a/ddsrouter_event/include/ddsrouter_event/LogSevereEventHandler.hpp
+++ b/ddsrouter_event/include/ddsrouter_event/LogSevereEventHandler.hpp
@@ -22,6 +22,7 @@
 #include <functional>

 #include <ddsrouter_event/LogEventHandler.hpp>
+#include <ddsrouter_event/library/library_dll.h>

 namespace eprosima {
 namespace ddsrouter {
@@ -44,12 +45,12 @@ public:
      * @param callback callback to call every time a log entry is consumed.
      * @param threshold minimum log kind that will be consumed.
      */
-    LogSevereEventHandler(
+    DDSROUTER_EVENT_DllAPI LogSevereEventHandler(
             std::function<void(utils::Log::Entry)> callback,
             const utils::Log::Kind threshold = utils::Log::Kind::Warning);

     //! Override parent \c Consume method but only consuming logs above the \c threshold_ kind.
-    void Consume(
+    DDSROUTER_EVENT_DllAPI void Consume(
             const utils::Log::Entry& entry) override;

 protected:
diff --git a/ddsrouter_event/include/ddsrouter_event/MultipleEventHandler.hpp b/ddsrouter_event/include/ddsrouter_event/MultipleEventHandler.hpp
index adfbc63..19168dd 100644
--- a/ddsrouter_event/include/ddsrouter_event/MultipleEventHandler.hpp
+++ b/ddsrouter_event/include/ddsrouter_event/MultipleEventHandler.hpp
@@ -23,6 +23,7 @@
 #include <memory>

 #include <ddsrouter_event/EventHandler.hpp>
+#include <ddsrouter_event/library/library_dll.h>

 namespace eprosima {
 namespace ddsrouter {
@@ -52,7 +53,7 @@ public:
      *
      * @param callback : function that will be called when the signal raises.
      */
-    MultipleEventHandler(
+    DDSROUTER_EVENT_DllAPI MultipleEventHandler(
             std::function<void()> callback);

     /**
@@ -63,7 +64,7 @@ public:
      *
      * @warning Default callback is set in this constructor, so EventHandler is enabled.
      */
-    MultipleEventHandler();
+    DDSROUTER_EVENT_DllAPI MultipleEventHandler();

     /**
      * @brief Destroy MultipleEventHandler object
@@ -71,7 +72,7 @@ public:
      * Releases every inside EventHandler.
      * Calls \c unset_callback .
      */
-    ~MultipleEventHandler();
+    DDSROUTER_EVENT_DllAPI ~MultipleEventHandler();

     /**
      * @brief Register a new \c EventHandler
diff --git a/ddsrouter_event/include/ddsrouter_event/PeriodicEventHandler.hpp b/ddsrouter_event/include/ddsrouter_event/PeriodicEventHandler.hpp
index 886d375..2c1c2b3 100644
--- a/ddsrouter_event/include/ddsrouter_event/PeriodicEventHandler.hpp
+++ b/ddsrouter_event/include/ddsrouter_event/PeriodicEventHandler.hpp
@@ -25,6 +25,7 @@

 #include <ddsrouter_utils/Time.hpp>
 #include <ddsrouter_event/EventHandler.hpp>
+#include <ddsrouter_event/library/library_dll.h>

 namespace eprosima {
 namespace ddsrouter {
@@ -47,7 +48,7 @@ public:
      *
      * @throw \c InitializationException in case \c period_time is lower than minimum time period (1ms).
      */
-    PeriodicEventHandler(
+    DDSROUTER_EVENT_DllAPI PeriodicEventHandler(
             utils::Duration_ms period_time);

     /**
@@ -58,7 +59,7 @@ public:
      *
      * @throw \c InitializationException in case \c period_time is lower than minimum time period (1ms).
      */
-    PeriodicEventHandler(
+    DDSROUTER_EVENT_DllAPI PeriodicEventHandler(
             std::function<void()> callback,
             utils::Duration_ms period_time);

@@ -67,7 +68,7 @@ public:
      *
      * Calls \c unset_callback
      */
-    ~PeriodicEventHandler();
+    DDSROUTER_EVENT_DllAPI ~PeriodicEventHandler();

 protected:

diff --git a/ddsrouter_event/include/library/eProsima_auto_link.h.in b/ddsrouter_event/include/library/eProsima_auto_link.h.in
index f3575fb..c709384 100644
--- a/ddsrouter_event/include/library/eProsima_auto_link.h.in
+++ b/ddsrouter_event/include/library/eProsima_auto_link.h.in
@@ -14,7 +14,7 @@

 /*
    Expected defines.
-   - EPROSIMA_LIB_NAME
+   - EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MINOR
  */
@@ -42,16 +42,16 @@
     #endif // if (defined(_DLL) || defined(_RTLDLL)) && defined(EPROSIMA_DYN_LINK)

 // Include library
-    #if defined(EPROSIMA_LIB_NAME) \
+    #if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) \
     && defined(EPROSIMA_LIB_PREFIX) \
     && defined(EPROSIMA_LIB_DEBUG_TAG) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
         #pragma \
-    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
+    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
     #else
     #error "Some required macros where not defined"
-    #endif // if defined(EPROSIMA_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
+    #endif // if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)

 #endif // _MSC_VER

@@ -60,9 +60,9 @@
 #undef EPROSIMA_LIB_PREFIX
 #endif // ifdef EPROSIMA_LIB_PREFIX

-#ifdef EPROSIMA_LIB_NAME
-#undef EPROSIMA_LIB_NAME
-#endif // ifdef EPROSIMA_LIB_NAME
+#ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#undef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#endif // ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME

 #ifdef EPROSIMA_LIB_DEBUG_TAG
 #undef EPROSIMA_LIB_DEBUG_TAG
diff --git a/ddsrouter_event/include/library/library_dll.h.in b/ddsrouter_event/include/library/library_dll.h.in
index ff78a44..304ee3e 100644
--- a/ddsrouter_event/include/library/library_dll.h.in
+++ b/ddsrouter_event/include/library/library_dll.h.in
@@ -64,7 +64,7 @@
     && !defined(@SUBMODULE_PROJECT_MACROS@_NO_LIB)

 // Set properties.
-#define EPROSIMA_LIB_NAME @SUBMODULE_PROJECT_NAME@
+#define EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME @SUBMODULE_PROJECT_NAME@

 #if defined(EPROSIMA_ALL_DYN_LINK) || defined(@SUBMODULE_PROJECT_MACROS@_DYN_LINK)
 #define EPROSIMA_DYN_LINK
diff --git a/ddsrouter_event/project_settings.cmake b/ddsrouter_event/project_settings.cmake
index 40c05e8..e73142e 100644
--- a/ddsrouter_event/project_settings.cmake
+++ b/ddsrouter_event/project_settings.cmake
@@ -29,7 +29,7 @@ set(SUBMODULE_PROJECT_DEPENDENCIES
     ${SUBMODULE_PROJECT_FIND_PACKAGES})

 set(SUBMODULE_PROJECT_MACROS
-    DDSROUTEREVENT)
+    DDSROUTER_EVENT)

 set(SUBMODULE_THIRDPARTY_HEADERONLY_PACKAGES
     filewatch)
diff --git a/ddsrouter_event/src/cpp/CMakeLists.txt b/ddsrouter_event/src/cpp/CMakeLists.txt
index 9fcd8fe..3320d4f 100644
--- a/ddsrouter_event/src/cpp/CMakeLists.txt
+++ b/ddsrouter_event/src/cpp/CMakeLists.txt
@@ -57,8 +57,8 @@ set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJ

 # Define Public API
 target_compile_definitions(${PROJECT_NAME}
-    PUBLIC
-        PROJECT_SOURCE
+    PRIVATE
+        ${SUBMODULE_PROJECT_MACROS}_SOURCE
     )

 if(MSVC)
diff --git a/ddsrouter_utils/cmake/test/cmake_test_utils.cmake b/ddsrouter_utils/cmake/test/cmake_test_utils.cmake
index 3821df1..193a9f8 100644
--- a/ddsrouter_utils/cmake/test/cmake_test_utils.cmake
+++ b/ddsrouter_utils/cmake/test/cmake_test_utils.cmake
@@ -129,7 +129,7 @@ function(add_test_executable TEST_EXECUTABLE_NAME TEST_SOURCES TEST_NAME TEST_LI
     )

     if(MSVC)
-        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0)
+        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0 ${SUBMODULE_PROJECT_MACROS}_SOURCE)
     endif(MSVC)

     target_include_directories(${TEST_EXECUTABLE_NAME} PRIVATE
diff --git a/ddsrouter_utils/include/ddsrouter_utils/Formatter.hpp b/ddsrouter_utils/include/ddsrouter_utils/Formatter.hpp
index 63c9296..c417806 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/Formatter.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/Formatter.hpp
@@ -41,20 +41,17 @@ namespace utils {
  * concatenated in a single string. For example:
  * Exception(Formatter() << " object1 stream: " << obj1 << " object2 stream: " << obj2);
  */
-class DDSROUTERUTILS_DllAPI Formatter
+class Formatter
 {
 public:

     //! Concatenate stream values to this formatter
-    template<class Val> Formatter& operator <<(
-            const Val& val)
-    {
-        ss_ << val;
-        return *this;
-    }
+    template<class Val>
+    Formatter& operator <<(
+            const Val& val);

     //! Return a string with the concatenation of this object
-    std::string to_string() const noexcept;
+    DDSROUTER_UTILS_DllAPI std::string to_string() const noexcept;

 protected:

@@ -63,7 +60,7 @@ protected:
 };

 //! \c Formatter to stream serializator
-DDSROUTERUTILS_DllAPI std::ostream& operator <<(
+DDSROUTER_UTILS_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const Formatter& f);

@@ -71,4 +68,7 @@ DDSROUTERUTILS_DllAPI std::ostream& operator <<(
 } /* namespace ddsrouter */
 } /* namespace eprosima */

+// Include implementation template file
+#include <ddsrouter_utils/impl/Formatter.ipp>
+
 #endif /* _DDSROUTERUTILS_FORMATTET_HPP_ */
diff --git a/ddsrouter_utils/include/ddsrouter_utils/ReturnCode.hpp b/ddsrouter_utils/include/ddsrouter_utils/ReturnCode.hpp
index f57669b..fb55bb6 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/ReturnCode.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/ReturnCode.hpp
@@ -32,7 +32,7 @@ namespace utils {
  *
  * It uses the fastdds ReturnCode_t
  */
-class DDSROUTERUTILS_DllAPI ReturnCode : public eprosima::fastrtps::types::ReturnCode_t
+class ReturnCode : public eprosima::fastrtps::types::ReturnCode_t
 {
 public:

@@ -40,10 +40,10 @@ public:
     using eprosima::fastrtps::types::ReturnCode_t::ReturnCode_t;

     //! Specify the operator so OK code could be translated to True.
-    bool operator ()() const noexcept;
+    DDSROUTER_UTILS_DllAPI bool operator ()() const noexcept;

     //! Minor operator
-    bool operator <(
+    DDSROUTER_UTILS_DllAPI bool operator <(
             const ReturnCode& other) const noexcept;

 protected:
@@ -52,13 +52,13 @@ protected:
     static const std::map<ReturnCode, std::string> to_string_conversion_;

     // operator << needs access to the object
-    friend std::ostream& operator <<(
+    DDSROUTER_UTILS_DllAPI friend std::ostream& operator <<(
             std::ostream& os,
             const ReturnCode& code);
 };

 //! \c ReturnCode to stream serializator
-DDSROUTERUTILS_DllAPI std::ostream& operator <<(
+DDSROUTER_UTILS_DllAPI std::ostream& operator <<(
         std::ostream& os,
         const ReturnCode& code);

diff --git a/ddsrouter_utils/include/ddsrouter_utils/Time.hpp b/ddsrouter_utils/include/ddsrouter_utils/Time.hpp
index 97f86f0..0647a35 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/Time.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/Time.hpp
@@ -39,10 +39,7 @@ using Timestamp = std::chrono::time_point<std::chrono::system_clock>;
  *
  * @return Timestamp refering to the moment it is called
  */
-DDSROUTERUTILS_DllAPI inline Timestamp now() noexcept
-{
-    return std::chrono::system_clock::now();
-}
+DDSROUTER_UTILS_DllAPI Timestamp now() noexcept;

 } /* namespace utils */
 } /* namespace ddsrouter */
diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/ConfigurationException.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/ConfigurationException.hpp
index 055eac7..f54118e 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/ConfigurationException.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/ConfigurationException.hpp
@@ -29,7 +29,7 @@ namespace utils {
  * @brief Exception thrown when there has been some error reading a configuration file, reading a corrupted or
  *  not well-formed yaml, and when a configuration creation has failed.
  */
-class DDSROUTERUTILS_DllAPI ConfigurationException : public Exception
+class ConfigurationException : public Exception
 {
     // Use parent class constructors
     using Exception::Exception;
diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/DNSException.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/DNSException.hpp
index 25f7288..896c43b 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/DNSException.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/DNSException.hpp
@@ -28,7 +28,7 @@ namespace utils {
 /**
  * @brief Exception thrown when fail trying to get IP from Domain Name via DNS call.
  */
-class DDSROUTERUTILS_DllAPI DNSException : public Exception
+class DNSException : public Exception
 {
     // Use parent class constructors
     using Exception::Exception;
diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/Exception.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/Exception.hpp
index e32b4ef..4edcca9 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/Exception.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/Exception.hpp
@@ -23,6 +23,7 @@
 #include <string>

 #include <ddsrouter_utils/Formatter.hpp>
+#include <ddsrouter_utils/library/library_dll.h>

 namespace eprosima {
 namespace ddsrouter {
@@ -32,7 +33,7 @@ namespace utils {
  * @brief Base class for all exceptions thrown by the eProsima DDSRouter library.
  *
  */
-class DDSROUTERUTILS_DllAPI Exception : public std::exception
+class Exception : public std::exception
 {

 public:
@@ -42,7 +43,7 @@ public:
      *
      * @param message The message to be returned by what()
      */
-    Exception(
+    DDSROUTER_UTILS_DllAPI Exception(
             const char* message) noexcept;

     /**
@@ -50,7 +51,7 @@ public:
      *
      * @param message The message to be returned by what()
      */
-    Exception(
+    DDSROUTER_UTILS_DllAPI Exception(
             const std::string& message);

     /**
@@ -61,7 +62,7 @@ public:
      *
      * @param formatter The \c Formatter object where streams are concatenated
      */
-    Exception(
+    DDSROUTER_UTILS_DllAPI Exception(
             const utils::Formatter& formatter);

     /**
@@ -69,7 +70,7 @@ public:
      *
      * @param other The original exception object to copy
      */
-    Exception(
+    DDSROUTER_UTILS_DllAPI Exception(
             const Exception& other) = default;

     /**
@@ -78,7 +79,7 @@ public:
      * @param other The original exception object to copy
      * @return the current ddsrouter::Exception object after the copy
      */
-    Exception& operator =(
+    DDSROUTER_UTILS_DllAPI Exception& operator =(
             const Exception& other) = default;

     /**
@@ -86,7 +87,7 @@ public:
      *
      * @return Null-terminated string with the explanatory information
      */
-    virtual const char* what() const noexcept override;
+    DDSROUTER_UTILS_DllAPI virtual const char* what() const noexcept override;

 protected:

diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/InconsistencyException.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/InconsistencyException.hpp
index b04bc0c..8172394 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/InconsistencyException.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/InconsistencyException.hpp
@@ -34,7 +34,7 @@ namespace utils {
  * 4. Delete an element whose subelements have not been correctly deleted.
  * etc.
  */
-class DDSROUTERUTILS_DllAPI InconsistencyException : public Exception
+class InconsistencyException : public Exception
 {
     // Use parent class constructors
     using Exception::Exception;
diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/InitializationException.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/InitializationException.hpp
index f244279..b93fe81 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/InitializationException.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/InitializationException.hpp
@@ -28,7 +28,7 @@ namespace utils {
 /**
  * @brief Exception thrown when there has been an error initializing any Entity or subentity.
  */
-class DDSROUTERUTILS_DllAPI InitializationException : public Exception
+class InitializationException : public Exception
 {
     // Use parent class constructors
     using Exception::Exception;
diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/UnsupportedException.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/UnsupportedException.hpp
index e422ec7..8f9e51d 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/UnsupportedException.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/UnsupportedException.hpp
@@ -28,7 +28,7 @@ namespace utils {
 /**
  * @brief Exception to warn that a method or class is not implemented yet or not supported for the moment.
  */
-class DDSROUTERUTILS_DllAPI UnsupportedException : public Exception
+class UnsupportedException : public Exception
 {
     // Use parent class constructors
     using Exception::Exception;
diff --git a/ddsrouter_utils/include/ddsrouter_utils/exception/ValueNotAllowedException.hpp b/ddsrouter_utils/include/ddsrouter_utils/exception/ValueNotAllowedException.hpp
index 223ea3d..7ae5c78 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/exception/ValueNotAllowedException.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/exception/ValueNotAllowedException.hpp
@@ -30,7 +30,7 @@ namespace utils {
  *
  * Most common case is when an enumeration value has a value not contemplated in the enum definition.
  */
-class DDSROUTERUTILS_DllAPI ValueNotAllowedException : public Exception
+class ValueNotAllowedException : public Exception
 {
     // Use parent class constructors
     using Exception::Exception;
diff --git a/ddsrouter_utils/include/ddsrouter_utils/utils.hpp b/ddsrouter_utils/include/ddsrouter_utils/utils.hpp
index c45c667..979bdf8 100644
--- a/ddsrouter_utils/include/ddsrouter_utils/utils.hpp
+++ b/ddsrouter_utils/include/ddsrouter_utils/utils.hpp
@@ -36,7 +36,7 @@ namespace ddsrouter {
 namespace utils {

 //! Perform the wildcard matching using file comparison method
-DDSROUTERUTILS_DllAPI bool match_pattern(
+DDSROUTER_UTILS_DllAPI bool match_pattern(
         const std::string& pattern,
         const std::string& str) noexcept;

@@ -47,11 +47,11 @@ DDSROUTERUTILS_DllAPI bool match_pattern(
  *
  * @param [in,out] st : string to modify
  */
-DDSROUTERUTILS_DllAPI void to_lowercase(
+DDSROUTER_UTILS_DllAPI void to_lowercase(
         std::string& st) noexcept;

 template <typename T, bool Ptr = false>
-DDSROUTERUTILS_DllAPI std::ostream& element_to_stream(
+std::ostream& element_to_stream(
         std::ostream& os,
         T element);

@@ -65,25 +65,25 @@ DDSROUTERUTILS_DllAPI std::ostream& element_to_stream(
  * @return std::ostream& with the result stream concatenated
  */
 template <typename T, bool Ptr = false>
-DDSROUTERUTILS_DllAPI std::ostream& container_to_stream(
+std::ostream& container_to_stream(
         std::ostream& os,
         std::vector<T> list,
         std::string separator = ";");

 //! Concatenate a set by converting to vector.
 template <typename T, bool Ptr = false>
-DDSROUTERUTILS_DllAPI std::ostream& container_to_stream(
+std::ostream& container_to_stream(
         std::ostream& os,
         std::set<T> list,
         std::string separator = ";");

 template <typename T>
-DDSROUTERUTILS_DllAPI bool set_of_ptr_contains(
+bool set_of_ptr_contains(
         const std::set<std::shared_ptr<T>> set,
         const std::shared_ptr<T> element);

 template <typename T>
-DDSROUTERUTILS_DllAPI bool are_set_of_ptr_equal(
+bool are_set_of_ptr_equal(
         const std::set<std::shared_ptr<T>> set1,
         const std::set<std::shared_ptr<T>> set2);

@@ -98,14 +98,14 @@ DDSROUTERUTILS_DllAPI bool are_set_of_ptr_equal(
  *
  * @param formatter msg of the unexpected case.
  */
-DDSROUTERUTILS_DllAPI void tsnh(
+DDSROUTER_UTILS_DllAPI void tsnh(
         const Formatter& formatter);

 /**
  * @brief Convert a elements set into a shared ptr elements set.
  */
 template <typename Parent, typename Child>
-DDSROUTERUTILS_DllAPI std::set<std::shared_ptr<Parent>> convert_set_to_shared(
+std::set<std::shared_ptr<Parent>> convert_set_to_shared(
         std::set<Child> set);

 } /* namespace utils */
diff --git a/ddsrouter_utils/include/library/eProsima_auto_link.h.in b/ddsrouter_utils/include/library/eProsima_auto_link.h.in
index f3575fb..c709384 100644
--- a/ddsrouter_utils/include/library/eProsima_auto_link.h.in
+++ b/ddsrouter_utils/include/library/eProsima_auto_link.h.in
@@ -14,7 +14,7 @@

 /*
    Expected defines.
-   - EPROSIMA_LIB_NAME
+   - EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MINOR
  */
@@ -42,16 +42,16 @@
     #endif // if (defined(_DLL) || defined(_RTLDLL)) && defined(EPROSIMA_DYN_LINK)

 // Include library
-    #if defined(EPROSIMA_LIB_NAME) \
+    #if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) \
     && defined(EPROSIMA_LIB_PREFIX) \
     && defined(EPROSIMA_LIB_DEBUG_TAG) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
         #pragma \
-    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
+    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
     #else
     #error "Some required macros where not defined"
-    #endif // if defined(EPROSIMA_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
+    #endif // if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)

 #endif // _MSC_VER

@@ -60,9 +60,9 @@
 #undef EPROSIMA_LIB_PREFIX
 #endif // ifdef EPROSIMA_LIB_PREFIX

-#ifdef EPROSIMA_LIB_NAME
-#undef EPROSIMA_LIB_NAME
-#endif // ifdef EPROSIMA_LIB_NAME
+#ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#undef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#endif // ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME

 #ifdef EPROSIMA_LIB_DEBUG_TAG
 #undef EPROSIMA_LIB_DEBUG_TAG
diff --git a/ddsrouter_utils/include/library/library_dll.h.in b/ddsrouter_utils/include/library/library_dll.h.in
index ff78a44..304ee3e 100644
--- a/ddsrouter_utils/include/library/library_dll.h.in
+++ b/ddsrouter_utils/include/library/library_dll.h.in
@@ -64,7 +64,7 @@
     && !defined(@SUBMODULE_PROJECT_MACROS@_NO_LIB)

 // Set properties.
-#define EPROSIMA_LIB_NAME @SUBMODULE_PROJECT_NAME@
+#define EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME @SUBMODULE_PROJECT_NAME@

 #if defined(EPROSIMA_ALL_DYN_LINK) || defined(@SUBMODULE_PROJECT_MACROS@_DYN_LINK)
 #define EPROSIMA_DYN_LINK
diff --git a/ddsrouter_utils/project_settings.cmake b/ddsrouter_utils/project_settings.cmake
index ebdab00..c31140c 100644
--- a/ddsrouter_utils/project_settings.cmake
+++ b/ddsrouter_utils/project_settings.cmake
@@ -30,6 +30,6 @@ set(SUBMODULE_PROJECT_DEPENDENCIES
     ${SUBMODULE_PROJECT_FIND_PACKAGES})

 set(SUBMODULE_PROJECT_MACROS
-    DDSROUTERUTILS)
+    DDSROUTER_UTILS)

 # set(SUBMODULE_THIRDPARTY_HEADERONLY_PACKAGES )
diff --git a/ddsrouter_utils/src/cpp/CMakeLists.txt b/ddsrouter_utils/src/cpp/CMakeLists.txt
index 9fcd8fe..3320d4f 100644
--- a/ddsrouter_utils/src/cpp/CMakeLists.txt
+++ b/ddsrouter_utils/src/cpp/CMakeLists.txt
@@ -57,8 +57,8 @@ set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJ

 # Define Public API
 target_compile_definitions(${PROJECT_NAME}
-    PUBLIC
-        PROJECT_SOURCE
+    PRIVATE
+        ${SUBMODULE_PROJECT_MACROS}_SOURCE
     )

 if(MSVC)
diff --git a/ddsrouter_yaml/cmake/test/cmake_test_utils.cmake b/ddsrouter_yaml/cmake/test/cmake_test_utils.cmake
index 3821df1..193a9f8 100644
--- a/ddsrouter_yaml/cmake/test/cmake_test_utils.cmake
+++ b/ddsrouter_yaml/cmake/test/cmake_test_utils.cmake
@@ -129,7 +129,7 @@ function(add_test_executable TEST_EXECUTABLE_NAME TEST_SOURCES TEST_NAME TEST_LI
     )

     if(MSVC)
-        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0)
+        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0 ${SUBMODULE_PROJECT_MACROS}_SOURCE)
     endif(MSVC)

     target_include_directories(${TEST_EXECUTABLE_NAME} PRIVATE
diff --git a/ddsrouter_yaml/include/ddsrouter_yaml/YamlManager.hpp b/ddsrouter_yaml/include/ddsrouter_yaml/YamlManager.hpp
index 8d30eb0..83c050f 100644
--- a/ddsrouter_yaml/include/ddsrouter_yaml/YamlManager.hpp
+++ b/ddsrouter_yaml/include/ddsrouter_yaml/YamlManager.hpp
@@ -19,6 +19,7 @@
 #ifndef _DDSROUTERYAML_YAMLMANAGER_HPP_
 #define _DDSROUTERYAML_YAMLMANAGER_HPP_

+#include <ddsrouter_yaml/library/library_dll.h>
 #include <ddsrouter_yaml/Yaml.hpp>

 namespace eprosima {
@@ -28,7 +29,7 @@ namespace yaml {
 /**
  * Class that manages generic methods related with yaml load and yaml validation.
  */
-class YamlManager
+class DDSROUTER_YAML_DllAPI YamlManager
 {
 public:

diff --git a/ddsrouter_yaml/include/ddsrouter_yaml/YamlReader.hpp b/ddsrouter_yaml/include/ddsrouter_yaml/YamlReader.hpp
index ea0feae..5b2d481 100644
--- a/ddsrouter_yaml/include/ddsrouter_yaml/YamlReader.hpp
+++ b/ddsrouter_yaml/include/ddsrouter_yaml/YamlReader.hpp
@@ -19,6 +19,7 @@
 #ifndef _DDSROUTERYAML_YAMLREADER_HPP_
 #define _DDSROUTERYAML_YAMLREADER_HPP_

+#include <ddsrouter_yaml/library/library_dll.h>
 #include <ddsrouter_yaml/Yaml.hpp>

 namespace eprosima {
@@ -37,7 +38,7 @@ using TagType = std::string;
  * @brief Class that encapsulates methods to get values from Yaml Node.
  *
  */
-class YamlReader
+class DDSROUTER_YAML_DllAPI YamlReader
 {
 public:

diff --git a/ddsrouter_yaml/include/ddsrouter_yaml/YamlReaderConfiguration.hpp b/ddsrouter_yaml/include/ddsrouter_yaml/YamlReaderConfiguration.hpp
index 07645c0..edbd3b3 100644
--- a/ddsrouter_yaml/include/ddsrouter_yaml/YamlReaderConfiguration.hpp
+++ b/ddsrouter_yaml/include/ddsrouter_yaml/YamlReaderConfiguration.hpp
@@ -21,8 +21,8 @@

 #include <ddsrouter_core/configuration/DDSRouterConfiguration.hpp>

+#include <ddsrouter_yaml/library/library_dll.h>
 #include <ddsrouter_yaml/YamlReader.hpp>
-#include <ddsrouter_yaml/Yaml.hpp>

 namespace eprosima {
 namespace ddsrouter {
@@ -33,7 +33,7 @@ namespace yaml {
  *
  * TODO: Add version configuration so it could load different versions
  */
-class YamlReaderConfiguration : public YamlReader
+class DDSROUTER_YAML_DllAPI YamlReaderConfiguration : public YamlReader
 {
 public:

diff --git a/ddsrouter_yaml/include/library/eProsima_auto_link.h.in b/ddsrouter_yaml/include/library/eProsima_auto_link.h.in
index f3575fb..c709384 100644
--- a/ddsrouter_yaml/include/library/eProsima_auto_link.h.in
+++ b/ddsrouter_yaml/include/library/eProsima_auto_link.h.in
@@ -14,7 +14,7 @@

 /*
    Expected defines.
-   - EPROSIMA_LIB_NAME
+   - EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MINOR
  */
@@ -42,16 +42,16 @@
     #endif // if (defined(_DLL) || defined(_RTLDLL)) && defined(EPROSIMA_DYN_LINK)

 // Include library
-    #if defined(EPROSIMA_LIB_NAME) \
+    #if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) \
     && defined(EPROSIMA_LIB_PREFIX) \
     && defined(EPROSIMA_LIB_DEBUG_TAG) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
         #pragma \
-    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
+    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
     #else
     #error "Some required macros where not defined"
-    #endif // if defined(EPROSIMA_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
+    #endif // if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)

 #endif // _MSC_VER

@@ -60,9 +60,9 @@
 #undef EPROSIMA_LIB_PREFIX
 #endif // ifdef EPROSIMA_LIB_PREFIX

-#ifdef EPROSIMA_LIB_NAME
-#undef EPROSIMA_LIB_NAME
-#endif // ifdef EPROSIMA_LIB_NAME
+#ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#undef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#endif // ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME

 #ifdef EPROSIMA_LIB_DEBUG_TAG
 #undef EPROSIMA_LIB_DEBUG_TAG
diff --git a/ddsrouter_yaml/include/library/library_dll.h.in b/ddsrouter_yaml/include/library/library_dll.h.in
index ff78a44..304ee3e 100644
--- a/ddsrouter_yaml/include/library/library_dll.h.in
+++ b/ddsrouter_yaml/include/library/library_dll.h.in
@@ -64,7 +64,7 @@
     && !defined(@SUBMODULE_PROJECT_MACROS@_NO_LIB)

 // Set properties.
-#define EPROSIMA_LIB_NAME @SUBMODULE_PROJECT_NAME@
+#define EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME @SUBMODULE_PROJECT_NAME@

 #if defined(EPROSIMA_ALL_DYN_LINK) || defined(@SUBMODULE_PROJECT_MACROS@_DYN_LINK)
 #define EPROSIMA_DYN_LINK
diff --git a/ddsrouter_yaml/project_settings.cmake b/ddsrouter_yaml/project_settings.cmake
index 57ca07f..4fe6cbf 100644
--- a/ddsrouter_yaml/project_settings.cmake
+++ b/ddsrouter_yaml/project_settings.cmake
@@ -32,6 +32,6 @@ set(SUBMODULE_PROJECT_DEPENDENCIES
     ${SUBMODULE_PROJECT_FIND_PACKAGES})

 set(SUBMODULE_PROJECT_MACROS
-    DDSROUTERYAML)
+    DDSROUTER_YAML)

 # set(SUBMODULE_THIRDPARTY_HEADERONLY_PACKAGES )
diff --git a/ddsrouter_yaml/src/cpp/CMakeLists.txt b/ddsrouter_yaml/src/cpp/CMakeLists.txt
index 9fcd8fe..3320d4f 100644
--- a/ddsrouter_yaml/src/cpp/CMakeLists.txt
+++ b/ddsrouter_yaml/src/cpp/CMakeLists.txt
@@ -57,8 +57,8 @@ set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJ

 # Define Public API
 target_compile_definitions(${PROJECT_NAME}
-    PUBLIC
-        PROJECT_SOURCE
+    PRIVATE
+        ${SUBMODULE_PROJECT_MACROS}_SOURCE
     )

 if(MSVC)
diff --git a/ddsrouter_yaml/src/cpp/YamlManager.cpp b/ddsrouter_yaml/src/cpp/YamlManager.cpp
index c4fd8c4..fa078cf 100644
--- a/ddsrouter_yaml/src/cpp/YamlManager.cpp
+++ b/ddsrouter_yaml/src/cpp/YamlManager.cpp
@@ -20,6 +20,7 @@
 #include <ddsrouter_utils/exception/ConfigurationException.hpp>

 #include <ddsrouter_yaml/YamlManager.hpp>
+#include <ddsrouter_yaml/Yaml.hpp>

 namespace eprosima {
 namespace ddsrouter {
diff --git a/ddsrouter_yaml/src/cpp/YamlReader.cpp b/ddsrouter_yaml/src/cpp/YamlReader.cpp
index b9800d5..4fdd429 100644
--- a/ddsrouter_yaml/src/cpp/YamlReader.cpp
+++ b/ddsrouter_yaml/src/cpp/YamlReader.cpp
@@ -35,6 +35,7 @@
 #include <ddsrouter_utils/Log.hpp>
 #include <ddsrouter_utils/utils.hpp>

+#include <ddsrouter_yaml/Yaml.hpp>
 #include <ddsrouter_yaml/YamlReader.hpp>
 #include <ddsrouter_yaml/yaml_configuration_tags.hpp>

diff --git a/ddsrouter_yaml/src/cpp/YamlReaderConfiguration.cpp b/ddsrouter_yaml/src/cpp/YamlReaderConfiguration.cpp
index 6b12b79..2c55bec 100644
--- a/ddsrouter_yaml/src/cpp/YamlReaderConfiguration.cpp
+++ b/ddsrouter_yaml/src/cpp/YamlReaderConfiguration.cpp
@@ -24,6 +24,7 @@
 #include <ddsrouter_core/types/topic/RealTopic.hpp>
 #include <ddsrouter_core/types/topic/WildcardTopic.hpp>

+#include <ddsrouter_yaml/Yaml.hpp>
 #include <ddsrouter_yaml/YamlReaderConfiguration.hpp>
 #include <ddsrouter_yaml/YamlReader.hpp>
 #include <ddsrouter_yaml/YamlManager.hpp>
diff --git a/ddsrouter_yaml/test/TestUtils/TestLogHandler.hpp b/ddsrouter_yaml/test/TestUtils/TestLogHandler.hpp
index d0adc87..1017061 100644
--- a/ddsrouter_yaml/test/TestUtils/TestLogHandler.hpp
+++ b/ddsrouter_yaml/test/TestUtils/TestLogHandler.hpp
@@ -42,16 +42,15 @@ public:

 protected:

-    uint32_t max_severe_logs_;
-    uint32_t expected_severe_logs_;
-
     /**
      * @brief Pointer to the event handler log consumer
      *
      * @attention: this must be a raw pointer as Fast takes ownership of the consumer.
      */
-
     event::LogSevereEventHandler* log_consumer_;
+
+    uint32_t expected_severe_logs_;
+    uint32_t max_severe_logs_;
 };

 } /* namespace test */
diff --git a/ddsrouter_yaml/test/TestUtils/test_utils.cpp b/ddsrouter_yaml/test/TestUtils/test_utils.cpp
index f9237c8..74c1c0f 100644
--- a/ddsrouter_yaml/test/TestUtils/test_utils.cpp
+++ b/ddsrouter_yaml/test/TestUtils/test_utils.cpp
@@ -32,7 +32,7 @@ Guid random_guid(
         uint16_t seed /* = 1 */)
 {
     Guid guid;
-    guid.entityId.value[3] = seed;
+    guid.entityId.value[3] = static_cast<eprosima::fastrtps::rtps::octet>(seed);
     guid.guidPrefix.value[0] = 0x01;
     guid.guidPrefix.value[1] = 0x0f;
     return guid;
diff --git a/ddsrouter_yaml/test/unittest/YamlConfigurationTestUtils.hpp b/ddsrouter_yaml/test/unittest/YamlConfigurationTestUtils.hpp
index eeebb7d..315c3bc 100644
--- a/ddsrouter_yaml/test/unittest/YamlConfigurationTestUtils.hpp
+++ b/ddsrouter_yaml/test/unittest/YamlConfigurationTestUtils.hpp
@@ -49,8 +49,8 @@ struct YamlField
     {
     }

-    bool present;
     T value;
+    bool present;
 };

 template <typename T>
diff --git a/ddsrouter_yaml/test/unittest/entities/address/test_units/YamlGetEntityDiscoveryServerAddressTest_get_ds_address.ipp b/ddsrouter_yaml/test/unittest/entities/address/test_units/YamlGetEntityDiscoveryServerAddressTest_get_ds_address.ipp
index 0f2206e..bb0deda 100644
--- a/ddsrouter_yaml/test/unittest/entities/address/test_units/YamlGetEntityDiscoveryServerAddressTest_get_ds_address.ipp
+++ b/ddsrouter_yaml/test/unittest/entities/address/test_units/YamlGetEntityDiscoveryServerAddressTest_get_ds_address.ipp
@@ -113,7 +113,9 @@ TEST(YamlGetEntityDiscoveryServerAddressTest, get_ds_address)
         // Check every address introduced in yaml is in result
         for (core::types::Address address : addresses)
         {
-            ASSERT_NE(result.addresses().find(address), result.addresses().end());
+            // ATTENTION: this previous declaration is needed as listening_addresses() does not return a reference
+            std::set<eprosima::ddsrouter::core::types::Address> addresses = result.addresses();
+            ASSERT_NE(addresses.find(address), addresses.end());
         }
     }
 }
diff --git a/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_connection_addresses.ipp b/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_connection_addresses.ipp
index 9b47f27..646bce5 100644
--- a/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_connection_addresses.ipp
+++ b/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_connection_addresses.ipp
@@ -134,9 +134,11 @@ TEST(YamlGetDiscoveryServerParticipantConfigurationTest, get_participant_connect
         // Check every address is inside connection addresses of the configuration
         for (core::types::Address address : addresses)
         {
+            // ATTENTION: this previous declaration is needed as listening_addresses() does not return a reference
+            std::set<eprosima::ddsrouter::core::types::Address> addresses_result = result.connection_addresses().begin()->addresses();
             ASSERT_NE(
-                result.connection_addresses().begin()->addresses().find(address),
-                result.connection_addresses().begin()->addresses().end());
+                addresses_result.find(address),
+                addresses_result.end());
         }
     }

diff --git a/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_listening_addresses.ipp b/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_listening_addresses.ipp
index 198b3e4..952c9ed 100644
--- a/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_listening_addresses.ipp
+++ b/ddsrouter_yaml/test/unittest/participants/test_units/YamlGetDiscoveryServerParticipantConfigurationTest_get_participant_listening_addresses.ipp
@@ -109,9 +109,11 @@ TEST(YamlGetDiscoveryServerParticipantConfigurationTest, get_participant_listeni
         // Check every address is inside listening addresses of the configuration
         for (core::types::Address address : addresses)
         {
+            // ATTENTION: this previous declaration is needed as listening_addresses() does not return a reference
+            std::set<eprosima::ddsrouter::core::types::Address> addresses_result = result.listening_addresses();
             ASSERT_NE(
-                result.listening_addresses().find(address),
-                result.listening_addresses().end());
+                addresses_result.find(address),
+                addresses_result.end());
         }
     }

diff --git a/tools/ddsrouter_tool/cmake/test/cmake_test_utils.cmake b/tools/ddsrouter_tool/cmake/test/cmake_test_utils.cmake
index 3821df1..193a9f8 100644
--- a/tools/ddsrouter_tool/cmake/test/cmake_test_utils.cmake
+++ b/tools/ddsrouter_tool/cmake/test/cmake_test_utils.cmake
@@ -129,7 +129,7 @@ function(add_test_executable TEST_EXECUTABLE_NAME TEST_SOURCES TEST_NAME TEST_LI
     )

     if(MSVC)
-        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0)
+        target_compile_definitions(${TEST_EXECUTABLE_NAME} PRIVATE _CRT_DECLARE_NONSTDC_NAMES=0 ${SUBMODULE_PROJECT_MACROS}_SOURCE)
     endif(MSVC)

     target_include_directories(${TEST_EXECUTABLE_NAME} PRIVATE
diff --git a/tools/ddsrouter_tool/include/library/eProsima_auto_link.h.in b/tools/ddsrouter_tool/include/library/eProsima_auto_link.h.in
index f3575fb..c709384 100644
--- a/tools/ddsrouter_tool/include/library/eProsima_auto_link.h.in
+++ b/tools/ddsrouter_tool/include/library/eProsima_auto_link.h.in
@@ -14,7 +14,7 @@

 /*
    Expected defines.
-   - EPROSIMA_LIB_NAME
+   - EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR
    - @SUBMODULE_PROJECT_MACROS@_VERSION_MINOR
  */
@@ -42,16 +42,16 @@
     #endif // if (defined(_DLL) || defined(_RTLDLL)) && defined(EPROSIMA_DYN_LINK)

 // Include library
-    #if defined(EPROSIMA_LIB_NAME) \
+    #if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) \
     && defined(EPROSIMA_LIB_PREFIX) \
     && defined(EPROSIMA_LIB_DEBUG_TAG) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) \
     && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
         #pragma \
-    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
+    comment(lib, EPROSIMA_LIB_PREFIX EPROSIMA_STRINGIZE(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) EPROSIMA_LIB_DEBUG_TAG "-" EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) "." EPROSIMA_STRINGIZE(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR) ".lib")
     #else
     #error "Some required macros where not defined"
-    #endif // if defined(EPROSIMA_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)
+    #endif // if defined(EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME) && defined(EPROSIMA_LIB_PREFIX) && defined(EPROSIMA_LIB_DEBUG_TAG) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MAJOR) && defined(@SUBMODULE_PROJECT_MACROS@_VERSION_MINOR)

 #endif // _MSC_VER

@@ -60,9 +60,9 @@
 #undef EPROSIMA_LIB_PREFIX
 #endif // ifdef EPROSIMA_LIB_PREFIX

-#ifdef EPROSIMA_LIB_NAME
-#undef EPROSIMA_LIB_NAME
-#endif // ifdef EPROSIMA_LIB_NAME
+#ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#undef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME
+#endif // ifdef EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME

 #ifdef EPROSIMA_LIB_DEBUG_TAG
 #undef EPROSIMA_LIB_DEBUG_TAG
diff --git a/tools/ddsrouter_tool/include/library/library_dll.h.in b/tools/ddsrouter_tool/include/library/library_dll.h.in
index ff78a44..304ee3e 100644
--- a/tools/ddsrouter_tool/include/library/library_dll.h.in
+++ b/tools/ddsrouter_tool/include/library/library_dll.h.in
@@ -64,7 +64,7 @@
     && !defined(@SUBMODULE_PROJECT_MACROS@_NO_LIB)

 // Set properties.
-#define EPROSIMA_LIB_NAME @SUBMODULE_PROJECT_NAME@
+#define EPROSIMA_@SUBMODULE_PROJECT_MACROS@_LIB_NAME @SUBMODULE_PROJECT_NAME@

 #if defined(EPROSIMA_ALL_DYN_LINK) || defined(@SUBMODULE_PROJECT_MACROS@_DYN_LINK)
 #define EPROSIMA_DYN_LINK
diff --git a/tools/ddsrouter_tool/project_settings.cmake b/tools/ddsrouter_tool/project_settings.cmake
index 62b0f92..d0369b6 100644
--- a/tools/ddsrouter_tool/project_settings.cmake
+++ b/tools/ddsrouter_tool/project_settings.cmake
@@ -26,6 +26,7 @@ set(SUBMODULE_PROJECT_FIND_PACKAGES
     ddsrouter_utils
     ddsrouter_event
     ddsrouter_core
+    yaml-cpp
     ddsrouter_yaml)

 set(SUBMODULE_PROJECT_DEPENDENCIES
