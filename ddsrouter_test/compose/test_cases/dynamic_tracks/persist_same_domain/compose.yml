# Test description:
#   Check that the dynamic tracks can handle several subscribers in the same domain.
#   Check that dynamic tracks do not get deleted when the participant who created them disconnects.
#
# Test architecture:
#
# 1. Check that the first subscriber receives the data sent by the publisher.
#
# ┌───────────────────┐            ┌────────────────────┐
# │  Domain 80        │            │   Domain 81        │
# │ ┌──────────────┐ ┌┼────────────┼┐ ┌───────────────┐ │
# │ │publisher_0_t0│ ││  ddsrouter ││ │subscriber_1_t0│ │
# │ │             ─┼─┼┤►          ─┼┼─┤►              │ │
# │ │(local)       │ ││  (local)   ││ │(local)        │ │
# │ └──────────────┘ └┼────────────┼┘ └───────────────┘ │
# │                   │            │                    │
# └───────────────────┘            └────────────────────┘
#
# 2. Check that the second subscriber receives the data sent by the publisher.
#
# ┌───────────────────┐            ┌────────────────────┐
# │  Domain 80        │            │   Domain 81        │
# │ ┌──────────────┐ ┌┼────────────┼┐ ┌───────────────┐ │
# │ │publisher_0_t0│ ││  ddsrouter ││ │subscriber_1_t0│ │
# │ │             ─┼─┼┤►          ─┼┼─┤►              │ │
# │ │(local)       │ ││  (local)   ││ │(local)        │ │
# │ └──────────────┘ └┼──────────┬─┼┘ └───────────────┘ │
# │                   │          │ │                    │
# └───────────────────┘          │ │  ┌───────────────┐ │
#                                │ │  │subscriber_2_t0│ │
#                                └─┼──┤►              │ │
#                                  │  │(local)        │ │
#                                  │  └───────────────┘ │
#                                  │                    │
#                                  └────────────────────┘
#
# 3. Check that the second subscriber keeps receiving the data sent by the publisher.
#
# ┌───────────────────┐            ┌────────────────────┐
# │  Domain 80        │            │   Domain 81        │
# │ ┌──────────────┐ ┌┼────────────┼┐ ┌───────────────┐ │
# │ │publisher_0_t0│ ││  ddsrouter ││ │subscriber_2_t0│ │
# │ │             ─┼─┼┤►          ─┼┼─┤►              │ │
# │ │(local)       │ ││  (local)   ││ │(local)        │ │
# │ └──────────────┘ └┼────────────┼┘ └───────────────┘ │
# │                   │            │                    │
# └───────────────────┘            └────────────────────┘

services:

  # ROUTER
  ddsrouter:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsrouter
    networks:
      - std_net
    volumes:
      - ./ddsrouter.yaml:/config.yaml
    command: ddsrouter -c /config.yaml --timeout 10


  # DOMAIN 80
  publisher_0_t0:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: publisher_0_t0
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample publisher --samples 80 --domain 80 --topic topic0 --interval 100


  # DOMAIN 81
  subscriber_t0_1:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_t0_1
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 20 --timeout 4 --args "--samples 20 --domain 81 --topic topic0"

  subscriber_t0_2:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_t0_2
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 20 --timeout 4 --delay 2 --args "--samples 20 --domain 81 --topic topic0"

networks:
  std_net:
  default:
    driver: none
