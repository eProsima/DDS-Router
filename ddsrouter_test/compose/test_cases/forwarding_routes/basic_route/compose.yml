# Test description:
#   This test checks that if we set up a router with a route from a participant A to participant B,
#   participant B receives the data published by participant A, but participant A doesn't receive
#   the data published by participant B.
#
# Test architecture:
#
# ┌───────────────────────┐           ┌───────────────────────┐
# │  Domain 80            │           │            Domain 81  │
# │ ┌─────────────────┐   │           │   ┌─────────────────┐ │
# │ │ publisher_0_t0  │ ┌─┼───────────┼─┐ │ subscriber_1_t0 │ │
# │ │                 │ │ │ ddsrouter │ │ │                 │ │
# │ │ (local)         ├─┤►│           │ ├─┤►(local)         │ │
# │ └─────────────────┘ │ │ (local)   │ │ └─────────────────┘ │
# │                     └─┼───────────┼─┘                     │
# │ ┌─────────────────┐   │           │   ┌─────────────────┐ │
# │ │ subscriber_0_t1 │   │           │   │ publisher_1_t1  │ │
# │ │                 │   │           │   │                 │ │
# │ │ (local)         │   │           │   │ (local)         │ │
# │ └─────────────────┘   │           │   └────────────┬────┘ │
# │                       │           │                │      │
# └───────────────────────┘           │   ┌────────────▼────┐ │
#                                     │   │ subscriber_1_t1 │ │
#                                     │   │                 │ │
#                                     │   │ (local)         │ │
#                                     │   └─────────────────┘ │
#                                     │                       │
#                                     └───────────────────────┘

services:

  # ROUTER
  ddsrouter:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsrouter
    networks:
      - std_net
    volumes:
      - ./ddsrouter.yaml:/config.yaml
    command: ddsrouter -c /config.yaml --timeout 8


  # DOMAIN 0
  publisher_0_t0:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: publisher_0_t0
    networks:
      - std_net
    command: install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample publisher --interval 100 --samples 80 --domain 80 --topic topic0

  subscriber_0_t1:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_0_t1
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 0 --timeout 8 --args "--samples 20 --domain 80 --topic topic1"


  # DOMAIN 1
  subscriber_1_t0:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_1_t0
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 20 --timeout 8 --args "--samples 20 --domain 81 --topic topic0"

  publisher_1_t1:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: publisher_1_t1
    networks:
      - std_net
    command: install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample publisher --interval 100 --samples 80 --domain 81 --topic topic1

  subscriber_1_t1:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_1_t1
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 20 --timeout 8 --args "--samples 20 --domain 81 --topic topic1"

networks:
  std_net:
  default:
    driver: none
