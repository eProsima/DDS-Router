# Test description:
#   This test checks that if we set up a router with two participants: one local and
#   one with an xml security profile, the router can be used as a security backdoor:
#   it can communicate a publisher with security to a subscriber without security and
#   a publisher without security to a subscriber with security.
#
# Test architecture:
#
# ┌──────────┐                         ┌──────────┐
# │publisher │                         │publisher │
# │          │                         │          │
# │sec       │   ┌─────────────────┐   │no_sec    │
# │          │   │    ddsrouter    │   │          │
# │topic_1   ├───► ┌────┐ ┌──────┐ ◄───┤topic_0   │
# └──────────┘   │ │sec │ │no sec│ │   └──────────┘
#                │ │    │ │      │ │
# ┌──────────┐   │ │xml │ │local │ │   ┌──────────┐
# │subscriber├───► └────┘ └──────┘ ◄───┤subscriber│
# │          │   │                 │   │          │
# │sec       │   └─────────────────┘   │no_sec    │
# │          │                         │          │
# │topic_0   │                         │topic_1   │
# └──────────┘                         └──────────┘
#
# Test expected behavior:
#   1. The non-secure subscriber receives 15 samples from the secure publisher.
#   2. The secure subscriber receives 15 samples from the non-secure publisher.

services:

  # ROUTER
  ddsrouter:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsrouter
    networks:
      - std_net
    volumes:
      - ./ddsrouter.yaml:/config.yaml
      - ./configurations:/configurations
      - ./certs:/certs
    command: ddsrouter -c /config.yaml --timeout 12

  # DOMAIN 0
  publisher_local_0:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: publisher_local_0
    depends_on:
      - ddsrouter
    networks:
      - std_net
    command: build/fastdds_configuration_example/configuration publisher --interval 100 --samples 90 --domain 0 --name topic_0

  subscriber_local_1:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_local_1
    depends_on:
      - ddsrouter
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe build/fastdds_configuration_example/configuration --samples 15 --timeout 6 --args "--samples 15 --domain 0 --name topic_1"

  # DOMAIN SECURE
  publisher_sec_1:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: publisher_sec_1
    depends_on:
      - ddsrouter
    networks:
      - std_net
    volumes:
      - ./configurations:/configurations
      - ./certs:/certs
    environment:
      - FASTDDS_DEFAULT_PROFILES_FILE=/configurations/secure_configuration.xml
    command: build/fastdds_configuration_example/configuration publisher --interval 100 --samples 90 --profile-participant secure_local_pub --name topic_1  --domain 0

  subscriber_sec_0:
    image: ${DDSROUTER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_sec_0
    depends_on:
      - ddsrouter
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
      - ./configurations:/configurations
      - ./certs:/certs
    environment:
      - FASTDDS_DEFAULT_PROFILES_FILE=/configurations/secure_configuration.xml
    command: python3 /scripts/execute_and_validate_subscriber.py --exe build/fastdds_configuration_example/configuration --samples 15 --timeout 6 --args "--samples 15 --name topic_0 --profile-participant secure_local_sub --domain 0"

networks:
  std_net:
  default:
    driver: none
