#######################################
# ROS DISCOVERY SERVER CLIENT EXAMPLE #
#######################################

##################################
# CONFIGURATION VERSION
version: v2.0                                                     # 0

##################################
# ALLOWED TOPICS
# Allowing ROS2 HelloWorld demo_nodes

allowlist:
  - name: rt/chatter                                              # 1
    type: std_msgs::msg::dds_::String_                            # 1

##################################
# PARTICIPANTS
participants:

##################################
# SIMPLE PARTICIPANT
# This participant will subscribe to topics in allowlist in domain 0 and listen every message published there

  - name: SimpleROS2                                              # 2
    kind: local                                                   # 3
    domain: 0                                                     # 4

##################################
# ROS DISCOVERY CLIENT
# This participant will subscribe to topics in allowlist using Discovery Server protocol as Super Client

  - name: Client                                                  # 5
    kind: wan                                                     # 6
    discovery-server-guid:                                        # 7
      id: 2
    connection-addresses:
      - discovery-server-guid:
          id: 1
        addresses:
          - domain: 1.1.1.1
            port: 11666
            transport: tcp


##################################
# CONFIGURATION DESCRIPTION

# This configuration example configures a DDS Router to listen to every message published in domain 0 in topic
# rt/chatter from ROS2 demo_nodes, and to transmit these messages through a Discovery Server (configured as
# Super Client) to another Discovery Server (configured as Server).
# The other direction of communication is also possible; receive messages at the Discovery Server and locally
# publish them in domain 0.

# 0: Use YAML configuration version v2.0

# 1: Allow ROS 2 specific Topic Name <rt/chatter> with type <std_msgs::msg::dds_::String_>.
# Insert new topics in order to route them.

# 2: New Participant with name <SimpleROS2>.

# 3: Kind of SimpleROS2: <local>.
# LAN UDP communication with default simple multicast discovery.
# Remember that every ROS 2 Node relays the middleware communication to DDS, as a standard Participant.

# 4: SimpleROS2 will use DDS Domain ID <0>.

# 5: New Participant with name <ClientROS2>.

# 6: Kind of ClientROS2: <WAN>.

# 7: Add the configuration to connect with the DiscoveryServer of the Repeater Participant raised in the other side.
